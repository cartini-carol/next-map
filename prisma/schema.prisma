generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(version: "3.1.5"), uuid_ossp(map: "uuid-ossp", schema: "public")]
}

model Account {
  id                                              Int                    @id(map: "PK_bf68fd30f1adeede9c72a5cac09") @default(autoincrement())
  createdAt                                       DateTime               @default(now()) @db.Timestamptz(6)
  updatedAt                                       DateTime               @default(now()) @db.Timestamptz(6)
  deletedAt                                       DateTime?              @db.Timestamptz(6)
  password                                        String?                @db.VarChar
  changedTempPassword                             Boolean?               @default(false)
  loginFailCount                                  Int                    @default(0)
  loggedInAt                                      DateTime               @default(dbgenerated("'2023-05-03 12:01:47.152+00'::timestamp with time zone")) @db.Timestamptz(6)
  passChangedAt                                   DateTime               @default(dbgenerated("'2023-05-03 12:01:47.152+00'::timestamp with time zone")) @db.Timestamptz(6)
  passHeldOffAt                                   DateTime               @default(dbgenerated("'2023-05-03 12:01:47.152+00'::timestamp with time zone")) @db.Timestamptz(6)
  agreedAt                                        DateTime               @default(dbgenerated("'2023-05-03 12:01:47.152+00'::timestamp with time zone")) @db.Timestamptz(6)
  certifiedAt                                     DateTime?              @db.Timestamptz(6)
  lockedAt                                        DateTime?              @db.Timestamptz(6)
  activated                                       Boolean?               @default(true)
  pushReceivable                                  Boolean?
  emailReceivable                                 Boolean?
  messageReceivable                               Boolean?
  AccountHistory                                  AccountHistory[]
  AccountOptionalTerms                            AccountOptionalTerms[]
  AccountProvider                                 AccountProvider[]
  Administrator                                   Administrator?
  Customer                                        Customer?
  PushAlarm                                       PushAlarm[]
  RepairShop_RepairShop_updatedAccountIdToAccount RepairShop[]           @relation("RepairShop_updatedAccountIdToAccount")
  RepairShop_RepairShop_accountIdToAccount        RepairShop?            @relation("RepairShop_accountIdToAccount")
  VehicleWashStation                              VehicleWashStation?
  Vendor_Vendor_updatedAccountIdToAccount         Vendor[]               @relation("Vendor_updatedAccountIdToAccount")
  Vendor_Vendor_accountIdToAccount                Vendor?                @relation("Vendor_accountIdToAccount")
}

model AccountHistory {
  id               Int       @id(map: "PK_04a6c25ac65a7e4ce4eaa8ae5b8") @default(autoincrement())
  createdAt        DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime? @db.Timestamptz(6)
  ip               String?   @db.VarChar
  device           String?   @db.VarChar
  os               String?   @db.VarChar
  version          String?   @db.VarChar
  browser          String?   @db.VarChar
  engine           String?   @db.VarChar
  cpu              String?   @db.VarChar
  pushToken        String?   @db.VarChar
  expiredAt        DateTime? @db.Timestamptz(6)
  extendExpiryHour Int?
  accountId        Int
  Account          Account   @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1dc076638c86ad2f6865e480684")
}

model AccountOptionalTerms {
  id        Int       @id(map: "PK_0a82e4f35d38f0178cfa911e52b") @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  accountId Int?
  termsId   Int?
  Account   Account?  @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4d097bd017ba8796fb731a6fbe1")
  Terms     Terms?    @relation(fields: [termsId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b036780a1ed22cb06def5892bf4")
}

model AccountProvider {
  id               Int       @id(map: "PK_96b3909c187c822d19fa4418cf4") @default(autoincrement())
  createdAt        DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime? @db.Timestamptz(6)
  provider         String    @db.VarChar
  pId              String    @db.VarChar
  oauthAccessToken String    @db.VarChar
  accountId        Int
  Account          Account   @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a2c6357bde0000d58534aef73c7")

  @@index([accountId], map: "accountprovider_accountid_idx")
}

model Address {
  id           Int      @id(map: "PK_9034683839599c80ebe9ebb0891") @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @db.Timestamptz(6)
  regionDepth1 String?  @db.VarChar(100)
  regionDepth2 String?  @db.VarChar(100)
  regionDepth3 String?  @db.VarChar(100)
  zipCode      String?  @db.VarChar(5)
  country      String?  @db.VarChar(2)
  detail       String?  @db.VarChar(50)
  street       String?  @db.VarChar(100)
  zibun        String?  @db.VarChar(100)
  lat          String?  @db.VarChar
  lng          String?  @db.VarChar
}

model Administrator {
  id                                        Int                                    @id(map: "PK_d65ebbc8de33ec40b49f0129ede") @default(autoincrement())
  createdAt                                 DateTime                               @default(now()) @db.Timestamptz(6)
  updatedAt                                 DateTime                               @default(now()) @db.Timestamptz(6)
  deletedAt                                 DateTime?                              @db.Timestamptz(6)
  administratorAId                          String                                 @db.VarChar(200)
  administratorName                         String                                 @db.VarChar(100)
  administratorEmail                        String                                 @db.VarChar(200)
  administratorPhone                        String?                                @db.VarChar(20)
  administratorStatus                       Administrator_administratorstatus_enum @default(activation)
  administratorRemark                       String?                                @db.VarChar(100)
  accountId                                 Int                                    @unique(map: "REL_8a850d6a19feb0ddddc5d3daae")
  bosRoleId                                 Int?
  Account                                   Account                                @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8a850d6a19feb0ddddc5d3daaee")
  BosRole_Administrator_bosRoleIdToBosRole  BosRole?                               @relation("Administrator_bosRoleIdToBosRole", fields: [bosRoleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f07a0491593e686378533866a69")
  AppVersion                                AppVersion[]
  BosRole_BosRole_editorIdToAdministrator   BosRole[]                              @relation("BosRole_editorIdToAdministrator")
  BosRole_BosRole_registerIdToAdministrator BosRole[]                              @relation("BosRole_registerIdToAdministrator")
  Event_Event_registerIdToAdministrator     Event[]                                @relation("Event_registerIdToAdministrator")
  Event_Event_editorIdToAdministrator       Event[]                                @relation("Event_editorIdToAdministrator")
  Faq                                       Faq[]
  HappyCallStateLog                         HappyCallStateLog[]
  Notice                                    Notice[]
  ProductPriceBulk                          ProductPriceBulk[]
  Transaction                               Transaction[]

  @@index([administratorName], map: "IDX_7a44b001bc905d559050e54b64")
  @@index([administratorEmail], map: "IDX_dd9f5303977def831694d35d72")
  @@index([administratorAId], map: "IDX_e0415098360be7f6ad6be31672")
}

model AffiliateReward {
  id                     Int                     @id @default(autoincrement())
  createdAt              DateTime                @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime                @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?               @db.Timestamptz(6)
  startedAt              DateTime                @db.Timestamptz(6)
  endedAt                DateTime                @db.Timestamptz(6)
  rewardName             String                  @db.VarChar(100)
  rewardMemo             String?                 @db.VarChar(300)
  rewardChannel          Reward_channel_enum
  createdAdministratorId Int?
  updatedAdministratorId Int?
  AffiliateRewardDetail  AffiliateRewardDetail[]
}

model AffiliateRewardDetail {
  id                     Int                 @id @default(autoincrement())
  createdAt              DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime            @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?           @db.Timestamptz(6)
  rewardMethod           Reward_method_enum?
  rewardUniqueKey        Int?
  rewardAmount           Int
  rewardPrice            Int?
  createdAdministratorId Int?
  updatedAdministratorId Int?
  affiliateRewardId      Int
  AffiliateReward        AffiliateReward     @relation(fields: [affiliateRewardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AffiliateRewardDetail_affiliateRewardId")
}

model AlimTalkLog {
  id                 Int      @id(map: "PK_8cf19abfe7c0d01fbbd95084e58") @default(autoincrement())
  createdAt          DateTime @db.Timestamptz(6)
  templateCode       String?  @db.VarChar(200)
  phoneNumber        String?  @db.VarChar(100)
  requestMessageData String?  @db.VarChar(5000)
  responseData       String?  @db.VarChar(5000)
  responseCode       Int?

  @@index([phoneNumber], map: "alimtalklog_phonenumber_idx")
}

model AppStoreConnectRating {
  id                 Int       @id(map: "PK_7b37ad5a0e89ae93daec79363e7") @default(autoincrement())
  createdAt          DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime? @db.Timestamptz(6)
  date               String    @db.VarChar(12)
  packageName        String    @db.VarChar(50)
  totalAverageRating Float?
  totalReviewCount   Int?
}

model AppStoreConnectReview {
  id               Int       @id(map: "PK_96e44e864cc3f06973fc2a3c55e") @default(autoincrement())
  createdAt        DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime? @db.Timestamptz(6)
  type             String?   @db.VarChar(20)
  uuid             String    @db.VarChar(50)
  rating           Int?
  title            String?   @db.VarChar(100)
  body             String?   @db.VarChar(2000)
  reviewerNickname String    @db.VarChar(50)
  createdDate      DateTime? @db.Timestamptz(6)
  territory        String?   @db.VarChar(5)
}

model AppStoreConnectSalesReport {
  id                    Int       @id(map: "PK_e3aa130088013d6d8e1f3d73917") @default(autoincrement())
  createdAt             DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt             DateTime? @db.Timestamptz(6)
  provider              String?   @db.Char(5)
  providerCountry       String?   @db.Char(2)
  sku                   String?   @db.VarChar(100)
  developer             String?   @db.VarChar(4000)
  title                 String?   @db.VarChar(600)
  version               String?   @db.VarChar(100)
  productTypeIdentifier String?   @db.VarChar(18)
  units                 Int?
  developerProceeds     String?   @db.VarChar(20)
  beginDate             String?   @db.VarChar(20)
  endDate               String?   @db.VarChar(20)
  customerCurrency      String?   @db.Char(3)
  countryCode           String?   @db.Char(2)
  currencyofProceeds    String?   @db.VarChar(18)
  appleIdentifier       String?   @db.VarChar(18)
  customerPrice         String?   @db.VarChar(10)
  promoCode             String?   @db.VarChar(100)
  parentIdentifier      String?   @db.VarChar(10)
  subscription          String?   @db.VarChar(30)
  period                String?   @db.VarChar(50)
  category              String?   @db.VarChar(20)
  cmb                   String?   @db.VarChar(12)
  device                String?   @db.VarChar(10)
  supportedPlatforms    String?   @db.VarChar(10)
  proceedsReason        String?   @db.VarChar(20)
  preservedPricing      String?   @db.VarChar(30)
  client                String?   @db.VarChar(30)
  orderType             String?   @db.VarChar(30)
}

model AppVersion {
  id              Int                  @id(map: "PK_f7cadc5fda016abbd3d1841b66e") @default(autoincrement())
  createdAt       DateTime             @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime             @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?            @db.Timestamptz(6)
  service         String               @db.VarChar(50)
  type            AppVersion_type_enum
  version         String               @db.VarChar(20)
  description     String               @db.VarChar(1000)
  administratorId Int
  Administrator   Administrator        @relation(fields: [administratorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1b2c1697885add6a8aef103ff7f")

  @@unique([service, type, version], map: "uniqueVersion")
}

model AuthToken {
  id                   String              @id(map: "PK_8759bdebecbc095da0142df77e8") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt            DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime            @default(now()) @db.Timestamptz(6)
  key                  String              @db.VarChar(200)
  kind                 String              @db.VarChar(200)
  type                 AuthToken_type_enum
  token                String              @db.VarChar(100)
  accessToken          String?             @db.VarChar(100)
  accessTokenCreatedAt DateTime?           @db.Timestamptz(6)
  payload              String?             @db.VarChar(9999999)
}

model Banner {
  id        Int       @id(map: "PK_f4f83041fd483ae9faa35d13c9f") @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  location  String    @db.VarChar(100)
  viewable  Boolean   @default(true)
  link      String?   @db.VarChar(1000)
  mediaId   Int       @unique(map: "REL_d359b6924d823dbdd544d395c4")
  eventId   Int?
  Event     Event?    @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_06579edbfe9cae2c071fa0c3035")
  Media     Media     @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d359b6924d823dbdd544d395c40")
}

model BatchLock {
  id              Int                            @id(map: "PK_0158caa7a5fb75e526052831c3e") @default(autoincrement())
  createdAt       DateTime                       @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime                       @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?                      @db.Timestamptz(6)
  batchService    String                         @db.VarChar(500)
  batchLockStatus BatchLock_batchlockstatus_enum
}

model BatteryRush {
  id                 Int                           @id(map: "PK_2f5ab281022e9308bd53ec1c1e2") @default(autoincrement())
  createdAt          DateTime                      @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                      @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?                     @db.Timestamptz(6)
  rushNo             String                        @db.VarChar(100)
  rushType           BatteryRush_rushtype_enum
  rushPrice          Int?
  rushTax            Float?
  rushTaxType        BatteryRush_rushtaxtype_enum?
  rushStatus         BatteryRush_rushstatus_enum   @default(BEFORE_APPLICATION)
  paymentCompletedAt DateTime?                     @db.Timestamptz(6)
  reservedAt         DateTime?                     @db.Timestamptz(6)
  canceledAt         DateTime?                     @db.Timestamptz(6)
  completedAt        DateTime?                     @db.Timestamptz(6)
  customerName       String                        @db.VarChar(100)
  customerPhone      String?                       @db.VarChar(20)
  customerVehicleNo  String                        @db.VarChar(20)
  vehicleBrand       String                        @db.VarChar(100)
  vehicleModel       String                        @db.VarChar(20)
  subModel           String?                       @db.VarChar(100)
  regionDepth1       String                        @db.VarChar(100)
  regionDepth2       String                        @db.VarChar(100)
  regionDepth3       String                        @db.VarChar(100)
  zipCode            String?                       @db.VarChar(5)
  street             String?                       @db.VarChar(100)
  zibun              String?                       @db.VarChar(100)
  detail             String?                       @db.VarChar(50)
  lat                String?                       @db.VarChar(50)
  lng                String?                       @db.VarChar(50)
  rushMemo           String?                       @db.VarChar(500)
  returnStatus       String?                       @db.VarChar(100)
  returnMessage      String?                       @db.VarChar(100)
  requestedAt        DateTime?                     @db.Timestamptz(6)
  customerId         Int?
  customerVehicleId  Int?
  CustomerVehicle    CustomerVehicle?              @relation(fields: [customerVehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3e278e6c9eeded59f40aa1b1104")
  Customer           Customer?                     @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ce2b54a4fca2bd9cc55b8b593a4")
  BatteryRushReview  BatteryRushReview?
}

model BatteryRushReview {
  id            Int          @id(map: "PK_813c44bc389490e629442941322") @default(autoincrement())
  createdAt     DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime     @default(now()) @db.Timestamptz(6)
  deletedAt     DateTime?    @db.Timestamptz(6)
  batteryRushId Int?         @unique(map: "REL_45d2fecbe521eb88b77a7bf7d1")
  reviewItemId  Int?         @unique(map: "REL_11c9493cd52cda034310a16e5c")
  customerId    Int?
  ReviewItem    ReviewItem?  @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_11c9493cd52cda034310a16e5cf")
  BatteryRush   BatteryRush? @relation(fields: [batteryRushId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_45d2fecbe521eb88b77a7bf7d14")
  Customer      Customer?    @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c0f3d37b9e58877016d43541f35")
}

model BosMenu {
  id             Int              @id(map: "PK_900a1f177ac9abb5ad3f459110f") @default(autoincrement())
  createdAt      DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime         @default(now()) @db.Timestamptz(6)
  name           String           @db.VarChar(50)
  sortNumber     Int?
  parentMenuId   Int?
  BosMenu        BosMenu?         @relation("BosMenuToBosMenu", fields: [parentMenuId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1cc40d9792cf46795dc695cba53")
  other_BosMenu  BosMenu[]        @relation("BosMenuToBosMenu")
  BosRoleBosMenu BosRoleBosMenu[]
}

model BosRole {
  id                                              Int              @id(map: "PK_0939602e1001211950801c8cd83") @default(autoincrement())
  createdAt                                       DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt                                       DateTime         @default(now()) @db.Timestamptz(6)
  deletedAt                                       DateTime?        @db.Timestamptz(6)
  name                                            String           @unique(map: "unique_roleName") @db.VarChar(50)
  description                                     String?          @db.VarChar(500)
  status                                          String?          @default("사용") @db.VarChar(20)
  registerId                                      Int?
  editorId                                        Int?
  Administrator_Administrator_bosRoleIdToBosRole  Administrator[]  @relation("Administrator_bosRoleIdToBosRole")
  Administrator_BosRole_editorIdToAdministrator   Administrator?   @relation("BosRole_editorIdToAdministrator", fields: [editorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3e209585806a1fe6a370d761d1e")
  Administrator_BosRole_registerIdToAdministrator Administrator?   @relation("BosRole_registerIdToAdministrator", fields: [registerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f47a9b04f07e2fa5cbb2d2585d2")
  BosRoleBosMenu                                  BosRoleBosMenu[]
}

model BosRoleBosMenu {
  id        Int      @id(map: "PK_84a7f1777eddf38c287f43da702") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  bosMenuId Int?
  bosRoleId Int?
  BosMenu   BosMenu? @relation(fields: [bosMenuId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0d178a77eec3a216c2433799fc5")
  BosRole   BosRole? @relation(fields: [bosRoleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_748372f0f9bf5d75f819f6ece4c")
}

model CardBenefit {
  id         Int                   @id(map: "PK_87c8a5d76904d160119ea7a3353") @default(autoincrement())
  createdAt  DateTime              @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime              @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime?             @db.Timestamptz(6)
  type       CardBenefit_type_enum
  cardName   String                @db.VarChar(100)
  contents   String                @db.VarChar(500)
  sortNumber Int?
  mediaId    Int
  Media      Media                 @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fb349fa4b8be69b3fb2a22b968b")
}

model CarzenLog {
  id         Int       @id(map: "PK_c19e9cb178ff69bef448fba71e6") @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime? @db.Timestamptz(6)
  vin        String?   @db.VarChar(100)
  request    Json?     @db.Json
  response   Json?     @db.Json
  customerId Int?
  Customer   Customer? @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0afa64f4a1848e42f2ed338b70a")
}

model CarzenMaster {
  uid                 String  @db.VarChar(127)
  vendor              String? @db.VarChar(127)
  carname             String? @db.VarChar(127)
  startYear           String? @db.VarChar(127)
  endYear             String? @db.VarChar(127)
  modelYear           String? @db.VarChar(127)
  name                String? @db.VarChar(127)
  cartrim             String? @db.VarChar(127)
  submodel            String? @db.VarChar(127)
  type                String? @db.VarChar(127)
  grade               String? @db.VarChar(127)
  drive               String? @db.VarChar(127)
  mission             String? @db.VarChar(127)
  fuel                String? @db.VarChar(127)
  cc                  String? @db.VarChar(127)
  frontTire           String? @db.VarChar(127)
  rearTire            String? @db.VarChar(127)
  wiper               String? @db.VarChar(127)
  eOilLiter           String? @db.VarChar(127)
  battery             String? @db.VarChar(127)
  carUrl              String? @db.VarChar(127)
  updDate             String  @db.VarChar(10)
  updFlag             String? @db.VarChar(10)
  updColumn           String? @db.VarChar(100)
  updCpmplete         String? @db.VarChar(20)
  displayVehicleModel String? @db.VarChar(100)
  displayBatteryModel String? @db.VarChar(100)

  @@id([uid, updDate], map: "carzenmaster_un")
}

model Catalog {
  id                        Int                      @id(map: "PK_ae2af4ee16b2b7b6b5649e76ae6") @default(autoincrement())
  createdAt                 DateTime                 @default(now()) @db.Timestamptz(6)
  updatedAt                 DateTime                 @default(now()) @db.Timestamptz(6)
  deletedAt                 DateTime?                @db.Timestamptz(6)
  catalogName               String                   @db.VarChar(100)
  catalogDescription        String?                  @db.VarChar(2000)
  catalogManufactureCountry String?                  @db.VarChar(200)
  erpCode                   String?                  @unique(map: "unique_erpCode") @db.VarChar(100)
  catalogType               Catalog_catalogtype_enum @default(TANGIBLE)
  catalogRemark             String?                  @db.VarChar(100)
  catalogGroupId            Int
  representativeVendorId    Int?
  Vendor                    Vendor?                  @relation(fields: [representativeVendorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_14bb673b6ba5b295bffece5b982")
  CatalogGroup              CatalogGroup             @relation(fields: [catalogGroupId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_539dfa7fc7349fadb0c586bcffb")
  CatalogSpec               CatalogSpec[]
  CatalogVendor             CatalogVendor[]
  GoodsIssueItem            GoodsIssueItem[]
  GoodsReceiptItem          GoodsReceiptItem[]
  ProductOptionItem         ProductOptionItem[]
  Stock                     Stock[]
  VehicleDetailPart         VehicleDetailPart[]
}

model CatalogBrand {
  id                     Int                          @id(map: "PK_c99ff3ab39656d493953da6e7e5") @default(autoincrement())
  createdAt              DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime                     @default(now()) @db.Timestamptz(6)
  catalogBrandName       String                       @db.VarChar(100)
  catalogBrandSortNumber Int                          @default(0)
  brandType              CatalogBrand_brandtype_enum?
  catalogBrandRemark     String?                      @db.VarChar(100)
  catalogBrandMediaId    Int?
  Media                  Media?                       @relation(fields: [catalogBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_76af031fbd3413f5b725558fd3b")
  CatalogGroup           CatalogGroup[]
}

model CatalogCategory {
  id                      Int               @id(map: "PK_66d2e46f23d5ddf61b66d1d66e1") @default(autoincrement())
  createdAt               DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime          @default(now()) @db.Timestamptz(6)
  catalogCategoryName     String            @db.VarChar(100)
  catalogCategoryDepth    Int               @default(1)
  viewable                Boolean           @default(true)
  weight                  Int               @default(1)
  catalogCategoryRemark   String?           @db.VarChar(100)
  parentCatalogCategoryId Int?
  CatalogCategory         CatalogCategory?  @relation("CatalogCategoryToCatalogCategory", fields: [parentCatalogCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c64157b7c15affa516e03250b5b")
  other_CatalogCategory   CatalogCategory[] @relation("CatalogCategoryToCatalogCategory")
  CatalogGroup            CatalogGroup[]
}

model CatalogGroup {
  id                       Int                @id(map: "PK_83e280b3f5124b4e648e62f5376") @default(autoincrement())
  createdAt                DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt                DateTime           @default(now()) @db.Timestamptz(6)
  deletedAt                DateTime?          @db.Timestamptz(6)
  catalogGroupName         String             @db.VarChar(100)
  catalogGroupIntroduction String?            @db.VarChar(200)
  catalogGroupDescription  String?            @db.VarChar(2000)
  catalogGroupCode         String?            @db.VarChar(100)
  manufacturer             String?            @db.VarChar(100)
  catalogGroupRemark       String?            @db.VarChar(100)
  catalogCategoryId        Int
  catalogBrandId           Int
  Catalog                  Catalog[]
  CatalogBrand             CatalogBrand       @relation(fields: [catalogBrandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5be02484b9d9def4bf22095e4a7")
  CatalogCategory          CatalogCategory    @relation(fields: [catalogCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a6abf0168e7c19d1b6cab4e18d0")
  CatalogGroupSpec         CatalogGroupSpec[]
  OrderItemReview          OrderItemReview[]

  @@index([manufacturer], map: "IDX_9d46a8a5f71a3d3dabaa88d0dc")
  @@index([catalogGroupCode], map: "IDX_b7c39e6eae9fc93e3e1596f4a4")
  @@index([catalogGroupName], map: "IDX_dd774ec48ac12ee0746880fcec")
}

model CatalogGroupSpec {
  id                    Int          @id(map: "PK_78812d58d0ccac365b81817cc30") @default(autoincrement())
  createdAt             DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime     @default(now()) @db.Timestamptz(6)
  catalogGroupSpecKey   String       @db.VarChar(100)
  catalogGroupSpecValue String       @db.VarChar(100)
  catalogGroupId        Int
  CatalogGroup          CatalogGroup @relation(fields: [catalogGroupId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_13cf4d1b1e77f45f044c06a5fb5")
}

model CatalogPriceHistory {
  id              Int                              @id(map: "PK_126c4acf43e69fc13ed4776913b") @default(autoincrement())
  createdAt       DateTime                         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime                         @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?                        @db.Timestamptz(6)
  price           Int
  tax             Float
  taxType         CatalogPriceHistory_taxtype_enum
  adjustedAt      DateTime                         @db.Timestamptz(6)
  adminName       String?                          @db.VarChar(100)
  catalogVendorId Int
  CatalogVendor   CatalogVendor                    @relation(fields: [catalogVendorId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0a84e6931b6ea85e9d224dceb0b")
}

model CatalogSpec {
  id               Int      @id(map: "PK_50908459458461f9704803780ae") @default(autoincrement())
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @db.Timestamptz(6)
  catalogSpecKey   String   @db.VarChar(100)
  catalogSpecValue String   @db.VarChar(100)
  catalogId        Int
  Catalog          Catalog  @relation(fields: [catalogId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_79a81beb2901520f573f9597a3d")
}

model CatalogVendor {
  id                  Int                           @id(map: "PK_9d501b252e7fa94a7673ce5cc2b") @default(autoincrement())
  createdAt           DateTime                      @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime                      @default(now()) @db.Timestamptz(6)
  stockType           CatalogVendor_stocktype_enum?
  catalogId           Int
  vendorId            Int
  CatalogPriceHistory CatalogPriceHistory[]
  Catalog             Catalog                       @relation(fields: [catalogId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3945f0789f7e4b0d713e100cb55")
  Vendor              Vendor                        @relation(fields: [vendorId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b7315da59303d9f057977b3400a")
}

model Claim {
  id                Int           @id(map: "PK_e07ff93293d6a39d41e5fae7ec9") @default(autoincrement())
  createdAt         DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt         DateTime?     @db.Timestamptz(6)
  claimReason       String        @db.VarChar(100)
  claimDetailReason String?       @db.VarChar(100)
  claimedAt         DateTime?     @db.Timestamptz(6)
  claimAcceptedAt   DateTime?     @db.Timestamptz(6)
  claimRejectedAt   DateTime?     @db.Timestamptz(6)
  claimRejectReason String?       @db.VarChar(200)
  customerId        Int?
  Customer          Customer?     @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ad29a7bcb6be8f11efd840222ec")
  ReviewClaim       ReviewClaim[]
}

model Coupon {
  id                  Int                    @id(map: "PK_e30a9f8115364e26e71760b62b2") @default(autoincrement())
  createdAt           DateTime               @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime               @default(now()) @db.Timestamptz(6)
  deletedAt           DateTime?              @db.Timestamptz(6)
  couponName          String                 @db.VarChar(100)
  couponType          Coupon_coupontype_enum
  isAllowDuplication  Boolean
  issuedAt            DateTime               @db.Timestamptz(6)
  usedAt              DateTime?              @db.Timestamptz(6)
  restoredAt          DateTime?              @db.Timestamptz(6)
  orderNo             String?                @db.VarChar(100)
  discountPrice       Int?
  isWeb               Boolean?
  fromAvailabledAt    DateTime               @db.Timestamptz(6)
  toAvailabledAt      DateTime               @db.Timestamptz(6)
  couponTemplateJson  Json                   @db.Json
  distributePriceJson Json?                  @db.Json
  customerId          Int?
  couponTemplateId    Int?
  uniqueKey           String?                @db.VarChar(1000)
  memo                String?                @db.VarChar(300)
  CouponTemplate      CouponTemplate?        @relation(fields: [couponTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2647d688930206e7257cb14fa69")
  Customer            Customer?              @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_30b03baafaf0e6e325a841f33eb")

  @@index([orderNo], map: "IDX_6e1be602239ec9870ccdaea6ad")
  @@index([couponTemplateId], map: "coupon_coupontemplateid_idx")
}

model CouponApplyProductOption {
  id               Int            @id(map: "PK_a4e1a0587f0f1a65d64361a39a9") @default(autoincrement())
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
  couponTemplateId Int
  productOptionId  Int
  CouponTemplate   CouponTemplate @relation(fields: [couponTemplateId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_15ddf70a95653f09c97f86a4a2b")
  ProductOption    ProductOption  @relation(fields: [productOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2b63ee233c1162fd240f582e0c0")

  @@index([couponTemplateId], map: "couponapplyproductoption_productoptionid_idx")
}

model CouponCode {
  id                 Int             @id(map: "PK_3db236cd08d5ad138f757e589e4") @default(autoincrement())
  createdAt          DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime        @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?       @db.Timestamptz(6)
  couponCode         String          @unique(map: "unique_coupon_code") @db.VarChar(100)
  isAllowDuplication Boolean?        @default(false)
  assignedAt         DateTime?       @db.Timestamptz(6)
  registeredAt       DateTime?       @db.Timestamptz(6)
  eventId            Int?
  couponTemplateId   Int?
  CouponTemplate     CouponTemplate? @relation(fields: [couponTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4b08e30436d94de16b679402177")
  Event              Event?          @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f65c5ee897ff7a13aae9b227ad2")
}

model CouponDiscountAssignedProductOption {
  id               Int            @id(map: "PK_46b22479d7d0442dc10f6162895") @default(autoincrement())
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
  couponTemplateId Int
  productOptionId  Int
  ProductOption    ProductOption  @relation(fields: [productOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_09b144c0b181fba98c309b4de01")
  CouponTemplate   CouponTemplate @relation(fields: [couponTemplateId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b0483ef9ddd7b6dfecfd9711f50")
}

model CouponTemplate {
  id                                  Int                                            @id(map: "PK_5ab5b04a85a03688bdb36faf311") @default(autoincrement())
  createdAt                           DateTime                                       @default(now()) @db.Timestamptz(6)
  updatedAt                           DateTime                                       @default(now()) @db.Timestamptz(6)
  deletedAt                           DateTime?                                      @db.Timestamptz(6)
  couponName                          String                                         @unique(map: "couponTemplate") @db.VarChar(100)
  couponType                          CouponTemplate_coupontype_enum
  couponTargetServices                CouponTemplate_coupontargetservices_enum[]
  isShowCouponIssueButton             Boolean?
  isShowCouponPrice                   Boolean?
  isAllowIsolateDelivery              Boolean?
  isOnlyApp                           Boolean?
  isUnitDiscount                      Boolean?
  productDetailPageText               String?                                        @db.VarChar(100)
  isOperating                         Boolean
  isExposure                          Boolean                                        @default(false)
  isAllowDuplication                  Boolean?
  couponDiscountMethod                CouponTemplate_coupondiscountmethod_enum
  discountPrice                       Int?
  discountRate                        Int?
  fixedPrice                          Int?
  fromIssuedAt                        DateTime                                       @db.Timestamptz(6)
  toIssuedAt                          DateTime                                       @db.Timestamptz(6)
  availableType                       CouponTemplate_availabletype_enum
  fromAvailabledAt                    DateTime?                                      @db.Timestamptz(6)
  toAvailabledAt                      DateTime?                                      @db.Timestamptz(6)
  availablePeriod                     Int?
  couponMinPriceType                  CouponTemplate_couponminpricetype_enum?
  minPrice                            Int?
  minAmount                           Int?
  maxAmount                           Int?
  maxDiscountPrice                    Int?
  maxIssuedAmount                     Int?
  paymentMethods                      CouponTemplate_paymentmethods_enum[]
  paymentCards                        Json?
  createdUserName                     String?                                        @db.VarChar(100)
  updatedUserName                     String?                                        @db.VarChar(100)
  deliveryTemplateId                  Int?
  productCategoryId                   Int?
  memo                                String?                                        @db.VarChar(300)
  availableChannels                   String[]                                       @db.VarChar
  productDetailPageBenefitDisplay     CouponTemplate_couponbenefitdisplaytypes_enum?
  productListPageBenefitDisplay       CouponTemplate_couponbenefitdisplaytypes_enum?
  productListPageText                 String?                                        @db.VarChar(100)
  Coupon                              Coupon[]
  CouponApplyProductOption            CouponApplyProductOption[]
  CouponCode                          CouponCode[]
  CouponDiscountAssignedProductOption CouponDiscountAssignedProductOption[]
  DeliveryTemplate                    DeliveryTemplate?                              @relation(fields: [deliveryTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7e3d9545a5a8ebea428fc0617b4")
  ProductCategory                     ProductCategory?                               @relation(fields: [productCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b0a36ee446b76f30303b077cd4e")
}

model Customer {
  id                                                                        Int                        @id(map: "PK_60596e16740e1fa20dbf0154ec7") @default(autoincrement())
  createdAt                                                                 DateTime                   @default(now()) @db.Timestamptz(6)
  updatedAt                                                                 DateTime                   @default(now()) @db.Timestamptz(6)
  deletedAt                                                                 DateTime?                  @db.Timestamptz(6)
  customerName                                                              String                     @db.VarChar(50)
  customerEmail                                                             String                     @db.VarChar(200)
  customerPhone                                                             String                     @db.VarChar(12)
  birth                                                                     String?                    @db.VarChar
  gender                                                                    Customer_gender_enum?
  ci                                                                        String?                    @db.VarChar(100)
  di                                                                        String?                    @db.VarChar(100)
  leavedAt                                                                  DateTime?                  @db.Timestamptz(6)
  leaveReason                                                               String?                    @db.VarChar(1000)
  recommendationCode                                                        String                     @db.VarChar(6)
  recommenderCode                                                           String?                    @db.VarChar(50)
  dormantAt                                                                 DateTime?                  @db.Timestamptz(6)
  reSignupAvailableDate                                                     DateTime?                  @db.Timestamptz(6)
  customerRemark                                                            String?                    @db.VarChar(100)
  joinChannel                                                               Customer_joinchannel_enum?
  accountId                                                                 Int                        @unique(map: "REL_d63c303ce4165e01faaf9defe3")
  representativeAddressId                                                   Int?                       @unique(map: "REL_d62a1da86951ef50481fd3ee9a")
  representativeCustomerVehicleId                                           Int?                       @unique(map: "REL_43ede570d3192508dc807eab48")
  dormantYear                                                               Int?
  channelType                                                               String?                    @db.VarChar(100)
  BatteryRush                                                               BatteryRush[]
  BatteryRushReview                                                         BatteryRushReview[]
  CarzenLog                                                                 CarzenLog[]
  Claim                                                                     Claim[]
  Coupon                                                                    Coupon[]
  CustomerVehicle_Customer_representativeCustomerVehicleIdToCustomerVehicle CustomerVehicle?           @relation("Customer_representativeCustomerVehicleIdToCustomerVehicle", fields: [representativeCustomerVehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_43ede570d3192508dc807eab480")
  CustomerAddress_Customer_representativeAddressIdToCustomerAddress         CustomerAddress?           @relation("Customer_representativeAddressIdToCustomerAddress", fields: [representativeAddressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d62a1da86951ef50481fd3ee9ae")
  Account                                                                   Account                    @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d63c303ce4165e01faaf9defe3e")
  CustomerAddress_CustomerAddress_customerIdToCustomer                      CustomerAddress[]          @relation("CustomerAddress_customerIdToCustomer")
  CustomerMarketingLog                                                      CustomerMarketingLog[]
  CustomerVehicle_CustomerVehicle_customerIdToCustomer                      CustomerVehicle[]          @relation("CustomerVehicle_customerIdToCustomer")
  DormantCustomer                                                           DormantCustomer?
  EventApply                                                                EventApply[]
  GiftyshowHistory                                                          GiftyshowHistory[]
  Inquiry                                                                   Inquiry[]
  OfflineCoupon                                                             OfflineCoupon[]
  Order                                                                     Order[]
  OrderItemReview                                                           OrderItemReview[]
  Recommendation_Recommendation_recommenderCustomerIdToCustomer             Recommendation[]           @relation("Recommendation_recommenderCustomerIdToCustomer")
  Recommendation_Recommendation_recommendationCustomerIdToCustomer          Recommendation[]           @relation("Recommendation_recommendationCustomerIdToCustomer")
  Repair                                                                    Repair[]
  RepairShopReview                                                          RepairShopReview[]
  Review                                                                    Review[]
  ReviewItem                                                                ReviewItem[]
  ReviewUp                                                                  ReviewUp[]
  ShoppingBasket                                                            ShoppingBasket[]
  ValetReview                                                               ValetReview[]
  VehicleLog                                                                VehicleLog[]
  VehicleWashStationReview                                                  VehicleWashStationReview[]
  WithdrawalCustomer                                                        WithdrawalCustomer?

  @@index([createdAt], map: "IDX_7aeede423785c7a9a8d2426ea1")
  @@index([customerName], map: "IDX_af20603462bfe0007734873cf5")
}

model CustomerAddress {
  id                                                         Int       @id(map: "PK_8a50796ba8dbd869e563f653f8e") @default(autoincrement())
  createdAt                                                  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt                                                  DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt                                                  DateTime? @db.Timestamptz(6)
  regionDepth1                                               String    @db.VarChar
  regionDepth2                                               String    @db.VarChar
  regionDepth3                                               String    @db.VarChar
  zipCode                                                    String    @db.VarChar
  country                                                    String    @db.VarChar
  detail                                                     String    @db.VarChar
  street                                                     String    @db.VarChar
  zibun                                                      String    @db.VarChar
  lat                                                        String?   @db.VarChar
  lng                                                        String?   @db.VarChar
  customerId                                                 Int
  Customer_Customer_representativeAddressIdToCustomerAddress Customer? @relation("Customer_representativeAddressIdToCustomerAddress")
  Customer_CustomerAddress_customerIdToCustomer              Customer  @relation("CustomerAddress_customerIdToCustomer", fields: [customerId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0624fccdd7260c6712fea6decaa")
}

model CustomerMarketingLog {
  id                      Int                                               @id(map: "PK_f08878c7d7227a7738b7c6bce3f") @default(autoincrement())
  createdAt               DateTime                                          @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime                                          @default(now()) @db.Timestamptz(6)
  marketingReceivableType CustomerMarketingLog_marketingreceivabletype_enum
  marketingReceivable     Boolean
  customerId              Int
  Customer                Customer                                          @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_476f8221f1f0317f8f3470110d3")
}

model CustomerVehicle {
  id                                                                 Int                                           @id(map: "PK_069694d61b7edecbeb9a6f16607") @default(autoincrement())
  createdAt                                                          DateTime                                      @default(now()) @db.Timestamptz(6)
  updatedAt                                                          DateTime                                      @default(now()) @db.Timestamptz(6)
  deletedAt                                                          DateTime?                                     @db.Timestamptz(6)
  vehicleNumber                                                      String                                        @db.VarChar(20)
  vin                                                                String?                                       @db.VarChar(50)
  frontTire                                                          String                                        @db.VarChar(20)
  rearTire                                                           String                                        @db.VarChar(20)
  truckType                                                          CustomerVehicle_trucktype_enum?
  customerVehicleOwner                                               String                                        @db.VarChar(150)
  customerVehicleOwnerType                                           CustomerVehicle_customervehicleownertype_enum @default(INDIVIDUAL)
  customerVehicleRemark                                              String?                                       @db.VarChar(100)
  trim                                                               String?                                       @db.VarChar(200)
  firstVehicleRegisteredAt                                           DateTime?                                     @db.Timestamptz(6)
  engineOilLiter                                                     String?                                       @db.VarChar(50)
  vehicleBattery                                                     String?                                       @db.VarChar(100)
  driverSeatWiperSize                                                String?                                       @db.VarChar(50)
  passengerSeatWiperSize                                             String?                                       @db.VarChar(50)
  drivingAnalysis                                                    Json?                                         @db.Json
  recentVehicleCheckedAt                                             DateTime?                                     @db.Timestamptz(6)
  customerId                                                         Int
  vehicleDetailId                                                    Int
  BatteryRush                                                        BatteryRush[]
  Customer_Customer_representativeCustomerVehicleIdToCustomerVehicle Customer?                                     @relation("Customer_representativeCustomerVehicleIdToCustomerVehicle")
  VehicleDetail                                                      VehicleDetail                                 @relation(fields: [vehicleDetailId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e521fa6b5f2cc4197deb36d62c7")
  Customer_CustomerVehicle_customerIdToCustomer                      Customer                                      @relation("CustomerVehicle_customerIdToCustomer", fields: [customerId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fc2e60469557fd21ce4d0334ec8")
  CustomerVehicleMileageHistory                                      CustomerVehicleMileageHistory[]
  Repair                                                             Repair[]
  ShoppingBasket                                                     ShoppingBasket[]
}

model CustomerVehicleMileageHistory {
  id                    Int                                                      @id(map: "PK_c1ea1ceac6c8cb947f4f42141b8") @default(autoincrement())
  createdAt             DateTime                                                 @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime                                                 @default(now()) @db.Timestamptz(6)
  deletedAt             DateTime?                                                @db.Timestamptz(6)
  mileageInspectionType CustomerVehicleMileageHistory_mileageinspectiontype_enum
  vehicleMileage        Int
  customerVehicleId     Int
  CustomerVehicle       CustomerVehicle                                          @relation(fields: [customerVehicleId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a0882716550e6240cca2f1ddadf")
}

model DataList {
  id                 Int                     @id(map: "PK_876a13a7dcbde1a6461dadfbb19") @default(autoincrement())
  createdAt          DateTime                @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?               @db.Timestamptz(6)
  classification     String                  @db.VarChar(20)
  dataName           String                  @db.VarChar(50)
  dataContents       String                  @db.VarChar(100)
  dataType           DataList_datatype_enum?
  dataSql            String                  @db.VarChar(10485760)
  isSearchField      Boolean?                @default(false)
  searchJson         Json?                   @db.Json
  classificationSort Int                     @default(0)
  dataContentsSort   Int                     @default(0)
}

model DataLog {
  id            Int       @id(map: "PK_41d5799935f14e5136be3fe078d") @default(autoincrement())
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt     DateTime? @db.Timestamptz(6)
  dataId        Int       @default(0)
  requestName   String    @db.VarChar(50)
  requestReason String    @db.VarChar(1000)
  requestData   String    @db.VarChar(5000)
  registerId    Int       @default(0)
  registerName  String    @db.VarChar(100)
}

model DealPurchaseHistory {
  id        Int       @id(map: "PK_9610d9b5d363530a719b1ae28dd") @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  productId Int
  uniqueKey String    @db.VarChar(1000)
}

model DefaultRepairShopFee {
  id                  Int       @id(map: "PK_f3abf83523f43663de2de7df308") @default(autoincrement())
  createdAt           DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime  @default(now()) @db.Timestamptz(6)
  feeData             Json?     @db.Json
  startedAt           DateTime? @db.Timestamptz(6)
  endedAt             DateTime? @db.Timestamptz(6)
  repairShopFeeRemark String?   @db.VarChar(100)
}

model Delivery {
  id                   Int                            @id(map: "PK_90b858c3595a15f0e9bc9b972be") @default(autoincrement())
  createdAt            DateTime                       @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime                       @default(now()) @db.Timestamptz(6)
  deletedAt            DateTime?                      @db.Timestamptz(6)
  deliveryNo           String                         @db.VarChar(100)
  deliveryItemName     String?                        @db.VarChar(300)
  deliveryAmount       Int?
  deliveryPrice        Int?
  deliveryTax          Float?
  deliveryTaxType      Delivery_deliverytaxtype_enum?
  senderName           String                         @db.VarChar(100)
  receiverName         String                         @db.VarChar(100)
  senderRegionDepth1   String?                        @db.VarChar(100)
  senderRegionDepth2   String?                        @db.VarChar(100)
  senderRegionDepth3   String?                        @db.VarChar(100)
  senderZipCode        String?                        @db.VarChar(5)
  senderCountry        String?                        @db.VarChar(2)
  senderDetail         String?                        @db.VarChar(50)
  senderStreet         String?                        @db.VarChar(100)
  senderZibun          String?                        @db.VarChar(100)
  receiverRegionDepth1 String?                        @db.VarChar(100)
  receiverRegionDepth2 String?                        @db.VarChar(100)
  receiverRegionDepth3 String?                        @db.VarChar(100)
  receiverZipCode      String?                        @db.VarChar(5)
  receiverCountry      String?                        @db.VarChar(2)
  receiverDetail       String?                        @db.VarChar(50)
  receiverStreet       String?                        @db.VarChar(100)
  receiverZibun        String?                        @db.VarChar(100)
  deliveryType         Delivery_deliverytype_enum
  trackingNo           String?                        @db.VarChar(200)
  deliveryVendor       String?                        @db.VarChar(100)
  deliveryStartedAt    DateTime?                      @db.Timestamptz(6)
  deliveryCompletedAt  DateTime?                      @db.Timestamptz(6)
  customerVehicleNo    String?                        @db.VarChar(20)
  vehicleBrand         String?                        @db.VarChar(100)
  vehicleModel         String?                        @db.VarChar(100)
  vehicleTrim          String?                        @db.VarChar(300)
  customerVehicleId    Int?
  DeliveryHistory      DeliveryHistory[]

  @@index([deliveryNo], map: "IDX_3e5fd23a6456bc87b982214736")
}

model DeliveryHistory {
  id                       Int                                        @id(map: "PK_4e50f2bcb8e85cd42ff19d339b6") @default(autoincrement())
  createdAt                DateTime                                   @default(now()) @db.Timestamptz(6)
  updatedAt                DateTime                                   @default(now()) @db.Timestamptz(6)
  deletedAt                DateTime?                                  @db.Timestamptz(6)
  managerName              String?                                    @db.VarChar(100)
  managerTel               String?                                    @db.VarChar(20)
  location                 String?                                    @db.VarChar(500)
  deliveryHistoryStatus    DeliveryHistory_deliveryhistorystatus_enum @default(READY)
  memo                     String?                                    @db.VarChar(1000)
  deliveryHistoryStartedAt DateTime?                                  @db.Timestamptz(6)
  deliveryHistoryArrivedAt DateTime?                                  @db.Timestamptz(6)
  deliveryId               Int
  Delivery                 Delivery                                   @relation(fields: [deliveryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_58d5035096d587e37476c27a64a")
}

model DeliveryTemplate {
  id                                                                                 Int                      @id(map: "PK_0a806b757032a12e62f511f6b77") @default(autoincrement())
  createdAt                                                                          DateTime                 @default(now()) @db.Timestamptz(6)
  updatedAt                                                                          DateTime                 @default(now()) @db.Timestamptz(6)
  deletedAt                                                                          DateTime?                @db.Timestamptz(6)
  deliveryTemplateName                                                               String                   @db.VarChar(100)
  deliveryTemplateDescription                                                        String                   @db.VarChar(500)
  averageDeliveryDate                                                                String?                  @db.VarChar(100)
  isolationAverageDeliveryDate                                                       String?                  @db.VarChar(100)
  isImportLocation                                                                   Boolean?
  isReturnLocation                                                                   Boolean?
  deliveryMethodDescription                                                          String                   @db.VarChar(2000)
  deliveryMethodNotice                                                               String                   @db.VarChar(2000)
  exchangeReturnMethodDescription                                                    String                   @db.VarChar(1000)
  exchangeReturnNotice                                                               String                   @db.VarChar(1000)
  exchangeReturnImpossibleReason                                                     String                   @db.VarChar(1000)
  importLocationId                                                                   Int?                     @unique(map: "REL_183b7710ee8e85372422649a5b")
  returnLocationId                                                                   Int?                     @unique(map: "REL_3a27ad908b8352cee2ac7c3145")
  CouponTemplate                                                                     CouponTemplate[]
  DeliveryTemplateAddress_DeliveryTemplate_importLocationIdToDeliveryTemplateAddress DeliveryTemplateAddress? @relation("DeliveryTemplate_importLocationIdToDeliveryTemplateAddress", fields: [importLocationId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_183b7710ee8e85372422649a5b2")
  DeliveryTemplateAddress_DeliveryTemplate_returnLocationIdToDeliveryTemplateAddress DeliveryTemplateAddress? @relation("DeliveryTemplate_returnLocationIdToDeliveryTemplateAddress", fields: [returnLocationId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3a27ad908b8352cee2ac7c3145e")
  DeliveryTemplateMethod                                                             DeliveryTemplateMethod[]
  Product                                                                            Product[]
}

model DeliveryTemplateAddress {
  id                                                                          Int               @id(map: "PK_1e9816efaac24496f63a8865fd4") @default(autoincrement())
  createdAt                                                                   DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt                                                                   DateTime          @default(now()) @db.Timestamptz(6)
  regionDepth1                                                                String?           @db.VarChar(100)
  regionDepth2                                                                String?           @db.VarChar(100)
  regionDepth3                                                                String?           @db.VarChar(100)
  zipCode                                                                     String?           @db.VarChar(5)
  country                                                                     String?           @db.VarChar(2)
  detail                                                                      String?           @db.VarChar(50)
  street                                                                      String?           @db.VarChar(100)
  zibun                                                                       String?           @db.VarChar(100)
  lat                                                                         String?           @db.VarChar
  lng                                                                         String?           @db.VarChar
  DeliveryTemplate_DeliveryTemplate_importLocationIdToDeliveryTemplateAddress DeliveryTemplate? @relation("DeliveryTemplate_importLocationIdToDeliveryTemplateAddress")
  DeliveryTemplate_DeliveryTemplate_returnLocationIdToDeliveryTemplateAddress DeliveryTemplate? @relation("DeliveryTemplate_returnLocationIdToDeliveryTemplateAddress")
}

model DeliveryTemplateMethod {
  id                       Int                                                   @id(map: "PK_be58bedf3220b937b65b43f2bb7") @default(autoincrement())
  createdAt                DateTime                                              @default(now()) @db.Timestamptz(6)
  updatedAt                DateTime                                              @default(now()) @db.Timestamptz(6)
  deliveryMethodType       DeliveryTemplateMethod_deliverymethodtype_enum
  deliveryMethod           DeliveryTemplateMethod_deliverymethod_enum
  deliveryVendors          DeliveryTemplateMethod_deliveryvendors_enum
  deliveryFee              Int
  deliveryTax              Float?
  deliveryTaxType          DeliveryTemplateMethod_deliverytaxtype_enum?
  deliveryRoundFee         Int?
  location                 DeliveryTemplateMethod_location_enum
  isolationDeliveryFee     Int?
  isolationDeliveryTax     Float?
  isolationDeliveryTaxType DeliveryTemplateMethod_isolationdeliverytaxtype_enum?
  paymentType              DeliveryTemplateMethod_paymenttype_enum
  deliveryTemplateId       Int
  DeliveryTemplate         DeliveryTemplate                                      @relation(fields: [deliveryTemplateId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_46c63c9d456eecec61152c4c1e9")
}

model DiskTreadCheck {
  id               Int            @id(map: "PK_2a8be3c4f70a40b3acef4e27335") @default(autoincrement())
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
  dangerThreshold  Float?
  repairTips       String?        @db.VarChar(1000)
  wornOut          String?        @db.VarChar(300)
  color            Int?
  value            Float
  alertThreshold   Float?
  eachTreadCheckId Int            @unique(map: "REL_8094344f22f756ecd98eb38868")
  EachTreadCheck   EachTreadCheck @relation(fields: [eachTreadCheckId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8094344f22f756ecd98eb38868f")
}

model DispatchLog {
  id            Int                          @id(map: "PK_5aa23739e7c0226f88babef109c") @default(autoincrement())
  createdAt     DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime                     @default(now()) @db.Timestamptz(6)
  deletedAt     DateTime?                    @db.Timestamptz(6)
  sender        String?                      @db.VarChar(200)
  dispatchTitle String?                      @db.VarChar(200)
  dispatchBody  String?                      @db.VarChar(1000000)
  receiver      String                       @db.VarChar(200)
  sendingType   DispatchLog_sendingtype_enum
  payload       Json?                        @db.Json
}

model DispatchTemplate {
  id                          Int                                               @id(map: "PK_cfcdec734578bf8f440ee9c99d3") @default(autoincrement())
  createdAt                   DateTime                                          @default(now()) @db.Timestamptz(6)
  updatedAt                   DateTime                                          @default(now()) @db.Timestamptz(6)
  dispatchTemplateKey         String?                                           @unique(map: "unique_dispatchTemplateKey") @db.VarChar(200)
  dispatchTemplateTitle       String                                            @db.VarChar(100)
  dispatchTemplateBody        String?                                           @db.VarChar(1000000)
  dispatchTemplateSendingType DispatchTemplate_dispatchtemplatesendingtype_enum
  payload                     Json?                                             @db.Json
  dispatchTemplateType        DispatchTemplate_dispatchtemplatetype_enum
  DispatchTemplateReplacer    DispatchTemplateReplacer[]
}

model DispatchTemplateReplacer {
  id                 Int              @id(map: "PK_dd49297ce059559de2bb297d658") @default(autoincrement())
  createdAt          DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime         @default(now()) @db.Timestamptz(6)
  key                String           @db.VarChar(200)
  default            String?          @db.VarChar(300)
  isEssential        Boolean
  dispatchTemplateId Int
  DispatchTemplate   DispatchTemplate @relation(fields: [dispatchTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c5667b8425542e4231a5c81a51b")
}

model DormantCustomer {
  id                 Int                          @id(map: "PK_c8be20aae3b46d53716a0f52371") @default(autoincrement())
  createdAt          DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                     @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?                    @db.Timestamptz(6)
  customerName       String                       @db.VarChar(50)
  customerEmail      String                       @db.VarChar(200)
  customerPhone      String                       @db.VarChar(12)
  birth              String?                      @db.VarChar
  gender             DormantCustomer_gender_enum?
  ci                 String?                      @db.VarChar(100)
  di                 String?                      @db.VarChar(100)
  recommendationCode String                       @db.VarChar(6)
  recommenderCode    String?                      @db.VarChar(50)
  dormantAt          DateTime?                    @db.Timestamptz(6)
  customerRemark     String?                      @db.VarChar(100)
  customerId         Int?                         @unique(map: "REL_a290ef38f552bc685b73737980")
  Customer           Customer?                    @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a290ef38f552bc685b73737980d")

  @@index([createdAt], map: "IDX_6d5e38c042f379c69e3558b053")
  @@index([customerName], map: "IDX_7cbe4f8d54a69638a9a812922b")
}

model EachTreadCheck {
  id             Int             @id(map: "PK_fab66ace80bac1cd91a02c74b43") @default(autoincrement())
  createdAt      DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime        @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime?       @db.Timestamptz(6)
  position       String          @db.VarChar(10)
  treadCheckId   Int
  DiskTreadCheck DiskTreadCheck?
  TreadCheck     TreadCheck      @relation(fields: [treadCheckId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_645cc0af28153ffd0e7a5e78219")
  TireTreadCheck TireTreadCheck?
}

model Email {
  id           Int      @id(map: "PK_62cb0b2ff4f8d5ee9e3e9cdf5de") @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @db.Timestamptz(6)
  authUser     String   @db.VarChar
  authPassword String   @db.VarChar
  host         String   @db.VarChar
  port         Int
  secure       Boolean

  @@unique([authUser, host], map: "uniqueUserInfo")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model EpostZipcode {
  gubun        String? @db.VarChar(10)
  zipcode      String? @db.VarChar(10)
  regiondepth1 String? @db.VarChar(100)
  regiondepth2 String? @db.VarChar(100)
  regiondepth3 String? @db.VarChar(100)
  regiondepth4 String? @db.VarChar(100)

  @@ignore
}

model ErrorLog {
  id           Int      @id(map: "PK_972abeef499db564b068cb8b4c2") @default(autoincrement())
  ip           String?  @db.VarChar(999999)
  protocol     String?  @db.VarChar(999999)
  url          String?  @db.VarChar(999999)
  method       String?  @db.VarChar(999999)
  requestBody  String?  @db.VarChar(999999)
  requestQuery String?  @db.VarChar(999999)
  message      String?  @db.VarChar(999999)
  callStack    String?  @db.VarChar(999999)
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
}

model Ers {
  id         Int       @id(map: "PK_a21a96f4b383b83e7dadb784848") @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime? @db.Timestamptz(6)
  gubun      String    @db.VarChar(5)
  errCd      String    @db.VarChar(2)
  sendDtm    String    @db.VarChar(15)
  mbrRcpNo   String    @db.VarChar(20)
  rcpNo      String?   @db.VarChar(13)
  custNm     String?   @db.VarChar(20)
  custTel    String?   @db.VarChar(15)
  compCd     String?   @db.VarChar(5)
  compNm     String?   @db.VarChar(50)
  compTel    String?   @db.VarChar(15)
  drvrNm     String?   @db.VarChar(50)
  drvrTel    String?   @db.VarChar(15)
  rstSvrCd   String?   @db.VarChar(4)
  arriveTime String?   @db.VarChar(14)
  finishTime String?   @db.VarChar(14)
  goAddr     String?   @db.VarChar(200)
  goEtcAddr  String?   @db.VarChar(200)
  dist       String?   @db.VarChar(10)
  remark     String?   @db.VarChar(200)
  ifErrMsg   String?   @db.VarChar(999999)
}

model ErsFee {
  id                     Int       @id(map: "PK_d3b0d7286b421088b718ddd3214") @default(autoincrement())
  createdAt              DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime  @default(now()) @db.Timestamptz(6)
  erpCode                String?   @db.VarChar(100)
  productName            String    @db.VarChar(500)
  isDefaultPurchasePrice Boolean?  @default(false)
  batteryPurchasePrice   Float
  rushPurchasePrice      Float
  ersCode                String?   @db.VarChar(10)
  startedAt              DateTime? @db.Timestamptz(6)
  endedAt                DateTime? @db.Timestamptz(6)
}

model Event {
  id                                            Int            @id(map: "PK_894abf6d0c8562b398c717414d6") @default(autoincrement())
  createdAt                                     DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt                                     DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt                                     DateTime?      @db.Timestamptz(6)
  viewable                                      Boolean        @default(true)
  service                                       String         @default("default-app") @db.VarChar
  title                                         String         @db.VarChar(200)
  body                                          String?        @db.VarChar(20000)
  url                                           String?        @db.VarChar(1000)
  description                                   String         @db.VarChar(500)
  startedAt                                     DateTime       @db.Timestamptz(6)
  endedAt                                       DateTime       @db.Timestamptz(6)
  registerId                                    Int
  editorId                                      Int?
  eventBannerMediaId                            Int?           @unique(map: "REL_e41644a927a709816f36bb6e12")
  notice                                        String?        @db.VarChar(2000)
  Banner                                        Banner[]
  CouponCode                                    CouponCode[]
  Administrator_Event_registerIdToAdministrator Administrator  @relation("Event_registerIdToAdministrator", fields: [registerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_66c7f91d507c2a109b57bf0c652")
  Administrator_Event_editorIdToAdministrator   Administrator? @relation("Event_editorIdToAdministrator", fields: [editorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d64394134f7083001033f834b5e")
  Media                                         Media?         @relation(fields: [eventBannerMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e41644a927a709816f36bb6e126")
  EventApply                                    EventApply[]
}

model EventApply {
  id           Int                          @id(map: "PK_5a2f57bdbd703212a9c5572d2f0") @default(autoincrement())
  createdAt    DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime                     @default(now()) @db.Timestamptz(6)
  deletedAt    DateTime?                    @db.Timestamptz(6)
  applyChannel EventApply_applychannel_enum
  orderNos     String[]                     @db.VarChar
  eventId      Int
  customerId   Int
  Customer     Customer                     @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_33296053dcda50911d962e6402b")
  Event        Event                        @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5a85effa7ce2aa50e14fe8d6a57")
}

model Faq {
  id              Int           @id(map: "PK_2054412171bd7f13d1e0f7e15d0") @default(autoincrement())
  createdAt       DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?     @db.Timestamptz(6)
  service         String        @db.VarChar(100)
  viewable        Boolean       @default(true)
  question        String        @db.VarChar(1000)
  answer          String        @db.VarChar(2000)
  administratorId Int
  faqCategoryId   Int?
  Administrator   Administrator @relation(fields: [administratorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_29ce7ed57e33424d390a21229a1")
  FaqCategory     FaqCategory?  @relation(fields: [faqCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_52255d320e6b1c997fcfbe9c349")
}

model FaqCategory {
  id           Int                       @id(map: "PK_795f83d06a67fc5f9e8366ad339") @default(autoincrement())
  createdAt    DateTime                  @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime                  @default(now()) @db.Timestamptz(6)
  categoryName String                    @db.VarChar(100)
  viewable     Boolean
  sortNumber   Int
  service      FaqCategory_service_enum?
  Faq          Faq[]
}

model GiftyshowHistory {
  id               Int             @id(map: "PK_95d827c314348a6cc2aa8128044") @default(autoincrement())
  createdAt        DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime        @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?       @db.Timestamptz(6)
  recommendationId Int?
  requestData      String?         @db.VarChar(1000)
  responseData     String?         @db.VarChar(1000)
  transactionId    String?         @db.VarChar(20)
  cancelYn         Boolean         @default(false)
  customerId       Int?
  code             String?         @db.Char(10)
  requestType      String          @db.VarChar(10)
  Customer         Customer?       @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b737ab929d997793d63b9eb29ad")
  Recommendation   Recommendation? @relation(fields: [recommendationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bee95569e1f417adc7d123fdb89")
}

model GoodsIssue {
  id                      Int              @id(map: "PK_9ab7f2d10c2f2acde5330c2e382") @default(autoincrement())
  createdAt               DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime         @default(now()) @db.Timestamptz(6)
  deletedAt               DateTime?        @db.Timestamptz(6)
  goodsIssueNo            String           @db.VarChar(100)
  destinationName         String           @db.VarChar(100)
  destinationRegionDepth1 String           @db.VarChar
  destinationRegionDepth2 String?          @db.VarChar
  destinationRegionDepth3 String?          @db.VarChar
  destinationZipCode      String           @db.VarChar
  destinationCountry      String?          @db.VarChar
  destinationDetail       String?          @db.VarChar
  destinationStreet       String?          @db.VarChar
  destinationZibun        String?          @db.VarChar
  memo                    String?          @db.VarChar(500)
  GoodsIssueItem          GoodsIssueItem[]

  @@index([goodsIssueNo], map: "IDX_1dbc24cac235fd2541c79e69d7")
}

model GoodsIssueItem {
  id                         Int        @id(map: "PK_a2e01632338ffb6b7f35ca36081") @default(autoincrement())
  createdAt                  DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt                  DateTime   @default(now()) @db.Timestamptz(6)
  deletedAt                  DateTime?  @db.Timestamptz(6)
  goodsIssueItemNo           String     @db.VarChar(100)
  managerName                String?    @db.VarChar(100)
  goodsIssueItemName         String     @db.VarChar(100)
  goodsIssueItemCode         String     @db.VarChar(100)
  goodsIssueItemAmount       Int
  goodsIssueItemUnit         String     @default("EA") @db.VarChar(100)
  goodsIssueRequestedAt      DateTime?  @db.Timestamptz(6)
  goodsIssueRequestCheckedAt DateTime?  @db.Timestamptz(6)
  goodsIssuedConfirmedAt     DateTime?  @db.Timestamptz(6)
  goodsIssueCanceledAt       DateTime?  @db.Timestamptz(6)
  goodsIssueId               Int
  vendorId                   Int?
  warehouseId                Int?
  catalogId                  Int?
  Warehouse                  Warehouse? @relation(fields: [warehouseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_09e4dbeba7a63f4929f42ba7e53")
  Catalog                    Catalog?   @relation(fields: [catalogId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_361424296491d9e8e9db1dfb463")
  Vendor                     Vendor?    @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6add5b2ebd9fab2e276a6a52f44")
  GoodsIssue                 GoodsIssue @relation(fields: [goodsIssueId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f6705f3465477c78a9d9818350a")

  @@index([goodsIssueItemNo], map: "IDX_b092ba0b2c062443886f981e76")
}

model GoodsReceipt {
  id                     Int                                  @id(map: "PK_6423b89653a15234842ff54b8fb") @default(autoincrement())
  createdAt              DateTime                             @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime                             @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?                            @db.Timestamptz(6)
  goodsReceiptDocumentNo String                               @db.VarChar(30)
  goodsReceiptAt         DateTime?                            @db.Timestamptz(6)
  goodsReceiptCanceledAt DateTime?                            @db.Timestamptz(6)
  erpSended              Boolean?
  zeldaSended            Boolean?
  goodsReceiptStatus     GoodsReceipt_goodsreceiptstatus_enum @default(WAITING)
  goodsReceiptType       GoodsReceipt_goodsreceipttype_enum?
  vendorId               Int?
  warehouseId            Int?
  Vendor                 Vendor?                              @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_332977a84ffc4231f2a7e486813")
  Warehouse              Warehouse?                           @relation(fields: [warehouseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_aee8709829c57b1b14b22b7be36")
  GoodsReceiptItem       GoodsReceiptItem[]

  @@index([goodsReceiptDocumentNo], map: "IDX_a20750171ee7023b7e5a86250c")
  @@index([goodsReceiptStatus], map: "IDX_b970b1a222183dd19c04131f2e")
}

model GoodsReceiptItem {
  id                              Int          @id(map: "PK_7b5d7c8ab672421016ea35bae73") @default(autoincrement())
  createdAt                       DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt                       DateTime     @default(now()) @db.Timestamptz(6)
  deletedAt                       DateTime?    @db.Timestamptz(6)
  catalogName                     String       @db.VarChar(100)
  goodsReceiptItemAmount          Int
  goodsReceiptConfirmedItemAmount Int?
  goodsReceiptItemUnit            String       @default("EA") @db.VarChar(100)
  goodsReceiptItemPrice           Int
  goodsReceiptId                  Int
  catalogId                       Int
  Catalog                         Catalog      @relation(fields: [catalogId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80e32bf0a7db156f363b2c4ea7a")
  GoodsReceipt                    GoodsReceipt @relation(fields: [goodsReceiptId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a8fcb971d6100b03eb5df0d5136")
}

model GooglePlayConsoleInstall {
  id                    Int       @id(map: "PK_e24d689ecbbfb890fe6523b30e0") @default(autoincrement())
  createdAt             DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt             DateTime? @db.Timestamptz(6)
  date                  String    @db.VarChar(12)
  packageName           String    @db.VarChar(50)
  androidOsVersion      String?   @db.VarChar(20)
  dailyDeviceInstalls   Int?
  dailyDeviceUninstalls Int?
  dailyDeviceUpgrades   Int?
  totalUserInstalls     Int?
  dailyUserInstalls     Int?
  dailyUserUninstalls   Int?
  activeDeviceInstalls  Int?
  installEvents         Int?
  updateEvents          Int?
  uninstallEvents       Int?
}

model GooglePlayConsoleRating {
  id                 Int       @id(map: "PK_c160c0bb21ac51e2ac57ce268f1") @default(autoincrement())
  createdAt          DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime? @db.Timestamptz(6)
  date               String    @db.VarChar(12)
  packageName        String    @db.VarChar(50)
  dailyAverageRating Int?
  totalAverageRating Float?
}

model GooglePlayConsoleReview {
  id                               Int       @id(map: "PK_eaacfb7d12d59e45184b9956fcb") @default(autoincrement())
  createdAt                        DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt                        DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt                        DateTime? @db.Timestamptz(6)
  packageName                      String    @db.VarChar(100)
  appVersionCode                   Int?
  appVersionName                   String?   @db.VarChar(10)
  reviewerLanguage                 String?   @db.Char(5)
  device                           String?   @db.VarChar(20)
  reviewSubmitDateandTime          DateTime? @db.Timestamptz(6)
  reviewSubmitMillisSinceEpoch     String?   @db.VarChar(100)
  reviewLastUpdateDateandTime      DateTime? @db.Timestamptz(6)
  reviewLastUpdateMillisSinceEpoch String?   @db.VarChar(100)
  starRating                       String?   @db.VarChar(100)
  reviewTitle                      String?   @db.VarChar(100)
  reviewText                       String?   @db.VarChar(500)
  developerReplyDateandTime        String?   @db.VarChar(100)
  developerReplyMillisSinceEpoch   String?   @db.VarChar(100)
  developerReplyText               String?   @db.VarChar(100)
  reviewLink                       String?   @db.VarChar(500)
}

model GsMbiz {
  id                Int       @id(map: "PK_dd5be11d3cf9bda7c5c37e7f09d") @default(autoincrement())
  createdAt         DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt         DateTime? @db.Timestamptz(6)
  storCd            String?   @unique(map: "unique_storCd") @db.VarChar(50)
  storNm            String?   @db.VarChar(100)
  storTyNm          String?   @db.VarChar(300)
  tel               String?   @db.VarChar(50)
  zip               String?   @db.VarChar(50)
  spotAdres         String?   @db.VarChar(200)
  spotAdresDtl      String?   @db.VarChar(200)
  btnmgerOprtrNm    String?   @db.VarChar(200)
  btnmgerOprtrMpNo  String?   @db.VarChar(50)
  emailAdres        String?   @db.VarChar(100)
  storRestdeNm      String?   @db.VarChar(300)
  storOperBeginHm   String?   @db.VarChar(50)
  storOperEndHm     String?   @db.VarChar(50)
  bayQy             String?   @db.VarChar(50)
  storInfo          String?   @db.VarChar(500)
  useAt             String?   @db.VarChar(20)
  storPhotoPhyNm    String?   @db.VarChar(255)
  storPhotoFilePath String?   @db.VarChar(255)
}

model Inquiry {
  id                Int                  @id(map: "PK_3960f53c297778868ccaaad12c8") @default(autoincrement())
  createdAt         DateTime             @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime             @default(now()) @db.Timestamptz(6)
  deletedAt         DateTime?            @db.Timestamptz(6)
  service           Inquiry_service_enum
  title             String               @db.VarChar(1000)
  body              String               @db.VarChar(3000)
  reply             String?              @db.VarChar(5000)
  replier           String?              @db.VarChar(100)
  status            Inquiry_status_enum  @default(pending)
  orderNo           String?              @db.VarChar(100)
  orderItemNos      String[]             @db.VarChar
  faqId             Int?
  customerId        Int?
  repairShopId      Int?
  inquiryCategoryId Int?
  RepairShop        RepairShop?          @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7e670820073c02088dc4555a8a1")
  InquiryCategory   InquiryCategory?     @relation(fields: [inquiryCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c867a46f11ace588eb3ddcef382")
  Customer          Customer?            @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f46ff4e9890a151ad210fbba19d")
  InquiryMedia      InquiryMedia[]
}

model InquiryCategory {
  id           Int                           @id(map: "PK_2810c57dcfef5e3a73fadee919e") @default(autoincrement())
  createdAt    DateTime                      @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime                      @default(now()) @db.Timestamptz(6)
  categoryName String                        @db.VarChar(100)
  viewable     Boolean
  sortNumber   Int
  service      InquiryCategory_service_enum?
  Inquiry      Inquiry[]
}

model InquiryMedia {
  id        Int      @id(map: "PK_53ddcf0a1c2f9420106676fe10d") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  mediaId   Int?
  inquiryId Int?
  Inquiry   Inquiry? @relation(fields: [inquiryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4d5bd08fb9700caa61b71276780")
  Media     Media?   @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78f55e13ef685d3f66ab997cb53")
}

model IsolateAreaErs {
  id      Int     @id(map: "PK_007776bf48cde66c50167df5514") @default(autoincrement())
  zipCode String? @db.VarChar(20)
}

model IsolateAreaFee {
  id      Int     @id(map: "PK_65687f6a97792a997ab3f3b3b4c") @default(autoincrement())
  zipCode String? @db.VarChar(20)
}

model IsolateAreaValet {
  id      Int     @id(map: "PK_200e8a2e257017778ad1904f40b") @default(autoincrement())
  zipCode String? @db.VarChar(20)
}

model Media {
  id                                                                          Int                  @id(map: "PK_d6faa9c3e688a5d2b80d9bfdeb6") @default(autoincrement())
  createdAt                                                                   DateTime             @default(now()) @db.Timestamptz(6)
  updatedAt                                                                   DateTime             @default(now()) @db.Timestamptz(6)
  service                                                                     String               @default("default-app") @db.VarChar
  authorId                                                                    String?              @db.VarChar(100)
  type                                                                        Media_type_enum
  format                                                                      String               @db.VarChar(20)
  fileName                                                                    String               @db.VarChar(100)
  originName                                                                  String               @db.VarChar(200)
  folder                                                                      String               @default("storage") @db.VarChar(100)
  Banner                                                                      Banner?
  CardBenefit                                                                 CardBenefit[]
  CatalogBrand                                                                CatalogBrand[]
  Event                                                                       Event?
  InquiryMedia                                                                InquiryMedia[]
  Product                                                                     Product[]
  ProductBrand_ProductBrand_productBrandMediaIdToMedia                        ProductBrand[]       @relation("ProductBrand_productBrandMediaIdToMedia")
  ProductBrand_ProductBrand_mobileLargeProductBrandMediaIdToMedia             ProductBrand[]       @relation("ProductBrand_mobileLargeProductBrandMediaIdToMedia")
  ProductBrand_ProductBrand_largeProductBrandMediaIdToMedia                   ProductBrand[]       @relation("ProductBrand_largeProductBrandMediaIdToMedia")
  ProductBrand_ProductBrand_middleProductBrandMediaIdToMedia                  ProductBrand[]       @relation("ProductBrand_middleProductBrandMediaIdToMedia")
  ProductMedia                                                                ProductMedia[]
  Promotion_Promotion_displayMediaIdToMedia                                   Promotion[]          @relation("Promotion_displayMediaIdToMedia")
  Promotion_Promotion_promotionShareMediaIdToMedia                            Promotion[]          @relation("Promotion_promotionShareMediaIdToMedia")
  Promotion_Promotion_promotionMediaIdToMedia                                 Promotion[]          @relation("Promotion_promotionMediaIdToMedia")
  RepairShop                                                                  RepairShop?
  RepairShopMedia                                                             RepairShopMedia[]
  ReviewMedia                                                                 ReviewMedia[]
  VehicleBrand                                                                VehicleBrand?
  VehicleWashStation_VehicleWashStation_vehicleWashStationBrandMediaIdToMedia VehicleWashStation[] @relation("VehicleWashStation_vehicleWashStationBrandMediaIdToMedia")
  VehicleWashStation_VehicleWashStation_markerMediaIdToMedia                  VehicleWashStation[] @relation("VehicleWashStation_markerMediaIdToMedia")
}

model NonValetRegion {
  id        Int      @id(map: "PK_436a77fa16738ff3c8b4053952d") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  zipCode   String   @db.VarChar(20)
  useable   Boolean
}

model Notice {
  id                      Int           @id(map: "PK_44206eb3b3de13382471d701b93") @default(autoincrement())
  createdAt               DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt               DateTime?     @db.Timestamptz(6)
  service                 String        @db.VarChar(100)
  viewable                Boolean
  bannerViewable          Boolean       @default(false)
  title                   String        @db.VarChar(200)
  body                    String        @db.VarChar(1000000)
  administratorId         Int
  isPopupExposure         Boolean       @default(false)
  startedAt               DateTime?     @db.Timestamptz(6)
  endedAt                 DateTime?     @db.Timestamptz(6)
  popupExposureStartedAt  DateTime?     @db.Timestamptz(6)
  popupExposureEndedAt    DateTime?     @db.Timestamptz(6)
  popupExposureSortNumber Int?
  Administrator           Administrator @relation(fields: [administratorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3c51a94da77b060f980f299a75e")

  @@index([viewable], map: "IDX_006ac8779cd5d3d50f63d3adc7")
  @@index([createdAt], map: "IDX_0679869f55a09ed556783b8faa")
  @@index([service], map: "IDX_47451ea0ad63f5e630101bbc92")
}

model OfflineCoupon {
  id                      Int                   @id(map: "PK_4a4dfdf49d282926076c8a2a59b") @default(autoincrement())
  createdAt               DateTime              @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime              @default(now()) @db.Timestamptz(6)
  deletedAt               DateTime?             @db.Timestamptz(6)
  fromAvailabledAt        DateTime?             @db.Timestamptz(6)
  toAvailabledAt          DateTime?             @db.Timestamptz(6)
  offlineCouponNo         String                @db.VarChar(1000)
  customerId              Int
  offlineCouponTemplateId Int
  Customer                Customer              @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_256c80f65ef7ae7edcc35b27da0")
  OfflineCouponTemplate   OfflineCouponTemplate @relation(fields: [offlineCouponTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_acfce3fdff99b01fc5f37f36303")
}

model OfflineCouponTemplate {
  id                   Int                                             @id(map: "PK_cf1a5762d6da404c3af6861babd") @default(autoincrement())
  createdAt            DateTime                                        @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime                                        @default(now()) @db.Timestamptz(6)
  deletedAt            DateTime?                                       @db.Timestamptz(6)
  couponName           String                                          @db.VarChar(100)
  couponType           OfflineCouponTemplate_coupontype_enum
  couponServiceType    String?                                         @db.VarChar(100)
  couponDiscountMethod OfflineCouponTemplate_coupondiscountmethod_enum
  useable              Boolean
  startedAt            DateTime?                                       @db.Timestamptz(6)
  endedAt              DateTime?                                       @db.Timestamptz(6)
  couponDescription    String?                                         @db.VarChar(5000)
  couponBin            String                                          @db.VarChar(10)
  startSeq             String                                          @db.VarChar(1000)
  endSeq               String                                          @db.VarChar(1000)
  availableType        OfflineCouponTemplate_availabletype_enum        @default(PERIOD)
  fromAvailabledAt     DateTime?                                       @db.Timestamptz(6)
  toAvailabledAt       DateTime?                                       @db.Timestamptz(6)
  availablePeriod      Int?                                            @default(365)
  OfflineCoupon        OfflineCoupon[]

  @@index([useable], map: "offlineCouponTemplate_useable_idx")
}

model Order {
  id                            Int                    @id(map: "PK_3d5a3861d8f9a6db372b2b317b7") @default(autoincrement())
  createdAt                     DateTime               @default(now()) @db.Timestamptz(6)
  updatedAt                     DateTime               @default(now()) @db.Timestamptz(6)
  deletedAt                     DateTime?              @db.Timestamptz(6)
  orderNo                       String                 @db.VarChar(100)
  consumerName                  String?                @db.VarChar(100)
  consumerPhone                 String?                @db.VarChar(20)
  receiverName                  String?                @db.VarChar(100)
  receiverPhone                 String?                @db.VarChar(20)
  orderMemo                     String?                @db.VarChar(500)
  orderChannel                  String                 @db.VarChar(100)
  paidAt                        DateTime?              @db.Timestamptz(6)
  orderedAt                     DateTime?              @db.Timestamptz(6)
  pendedAt                      DateTime?              @db.Timestamptz(6)
  readiedAt                     DateTime?              @db.Timestamptz(6)
  orderType                     String                 @db.VarChar(100)
  orderStatus                   Order_orderstatus_enum
  deliveryRegionDepth1          String?                @db.VarChar(100)
  deliveryRegionDepth2          String?                @db.VarChar(100)
  deliveryRegionDepth3          String?                @db.VarChar(100)
  deliveryZipCode               String?                @db.VarChar(5)
  deliveryCountry               String?                @db.VarChar(2)
  deliveryDetail                String?                @db.VarChar(500)
  deliveryStreet                String?                @db.VarChar(100)
  deliveryZibun                 String?                @db.VarChar(100)
  refundCompletedAt             DateTime?              @db.Timestamptz(6)
  refundPrice                   Int?
  couponPrice                   Int?
  couponIds                     Int[]
  canceledAt                    DateTime?              @db.Timestamptz(6)
  canceledReason                String?                @db.VarChar(200)
  orderDetail                   String?                @db.VarChar(500)
  clientType                    Order_clienttype_enum?
  customerId                    Int?
  reviewId                      Int?                   @unique(map: "REL_4bc4d2a4327869154a08cd7102")
  externalOrderNo               String?                @db.VarChar(100)
  happyCallState                String                 @default("NONE") @db.VarChar(20)
  happyCallMemo                 String?                @db.VarChar(500)
  Customer                      Customer?              @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0f88449168b8ffae36cb3f8a140")
  Review_Order_reviewIdToReview Review?                @relation("Order_reviewIdToReview", fields: [reviewId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4bc4d2a4327869154a08cd71022")
  OrderItem                     OrderItem[]
  Review_Review_orderIdToOrder  Review?                @relation("Review_orderIdToOrder")
  ReviewItem                    ReviewItem[]

  @@index([customerId], map: "IDX_0f88449168b8ffae36cb3f8a14")
  @@index([orderType, orderStatus], map: "IDX_35f326dd758e9d9b481a660299")
}

model OrderDrivenDistance {
  id             Int       @id(map: "PK_8a45e16d1f68930f201423754ca") @default(autoincrement())
  createdAt      DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime? @db.Timestamptz(6)
  orderNo        String    @db.VarChar(100)
  drivenDistance Int
}

model OrderHistory {
  id        Int       @id(map: "PK_dc58d84febda7645ac7fa16656e") @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  orderNo   String?   @db.VarChar(50)
  orderId   Int?
  payload   Json?     @db.Json
}

model OrderItem {
  id                        Int                              @id(map: "PK_6bdc02af31674c4216a6b0a8b39") @default(autoincrement())
  createdAt                 DateTime                         @default(now()) @db.Timestamptz(6)
  updatedAt                 DateTime                         @default(now()) @db.Timestamptz(6)
  deletedAt                 DateTime?                        @db.Timestamptz(6)
  orderItemNo               String                           @db.VarChar(100)
  productBrandName          String                           @db.VarChar(100)
  orderItemName             String                           @db.VarChar(100)
  orderItemModelNo          String                           @db.VarChar(100)
  orderItemAmount           Int
  orderItemPrice            Float
  orderItemTax              Float
  orderItemTaxType          OrderItem_orderitemtaxtype_enum?
  pendedAt                  DateTime?                        @db.Timestamptz(6)
  paymentReadiedAt          DateTime?                        @db.Timestamptz(6)
  canceledAt                DateTime?                        @db.Timestamptz(6)
  paymentCompletedAt        DateTime?                        @db.Timestamptz(6)
  orderConfirmedAt          DateTime?                        @db.Timestamptz(6)
  goodsIssueRequestedAt     DateTime?                        @db.Timestamptz(6)
  goodsIssueCompletedAt     DateTime?                        @db.Timestamptz(6)
  deliveryCompletedAt       DateTime?                        @db.Timestamptz(6)
  purchaseConfirmedAt       DateTime?                        @db.Timestamptz(6)
  returnRequestedAt         DateTime?                        @db.Timestamptz(6)
  returnConfirmedAt         DateTime?                        @db.Timestamptz(6)
  returnCompletedAt         DateTime?                        @db.Timestamptz(6)
  productJson               Json                             @db.Json
  returnReason              String?                          @db.VarChar(5000)
  isSellerReason            Boolean?
  refundCompletedAt         DateTime?                        @db.Timestamptz(6)
  refundPrice               Int?
  orderId                   Int
  productCategoryId         Int
  serviceCompletedAt        DateTime?                        @db.Timestamptz(6)
  isCarryOver               Boolean
  returnAppliedAt           DateTime?                        @db.Timestamptz(6)
  orderItemAddInfoJson      Json?                            @db.Json
  returnDeliveryCompletedAt DateTime?                        @db.Timestamptz(6)
  ProductCategory           ProductCategory                  @relation(fields: [productCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_70a97467115215175025cbd6db9")
  Order                     Order                            @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c94ace27164b9ffde93ebdbe95c")
  OrderItemProductOption    OrderItemProductOption[]
  OrderItemReview           OrderItemReview?

  @@index([paymentCompletedAt, orderConfirmedAt, goodsIssueRequestedAt, goodsIssueCompletedAt, deliveryCompletedAt, purchaseConfirmedAt], map: "IDX_512a1f965a0a4cc8712b7d8662")
  @@index([canceledAt], map: "IDX_7e40dd155011c623fa4c1bd297")
  @@index([orderItemName], map: "IDX_8e34e2c8fb17246837f5010b43")
  @@index([returnRequestedAt, returnConfirmedAt, returnCompletedAt], map: "IDX_941f26ccd87b2a0df48a86ed75")
  @@index([orderItemModelNo], map: "IDX_aa4b641af9c8f204cf56fca676")
}

model OrderItemProductOption {
  id                Int                                 @id(map: "PK_85c9c8a003fd9ce5bbe519814f6") @default(autoincrement())
  createdAt         DateTime                            @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime                            @default(now()) @db.Timestamptz(6)
  deletedAt         DateTime?                           @db.Timestamptz(6)
  price             Int
  tax               Float
  taxType           OrderItemProductOption_taxtype_enum
  orderItemId       Int
  productOptionId   Int
  amount            Int
  productOptionName String?                             @db.VarChar(1000)
  erpCode           String?                             @db.VarChar(100)
  ProductOption     ProductOption                       @relation(fields: [productOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1b66d16eec9a03eddab1a86ce22")
  OrderItem         OrderItem                           @relation(fields: [orderItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_48183d086d71873cafb294a4664")

  @@index([orderItemId], map: "IDX_48183d086d71873cafb294a466")
}

model OrderItemReview {
  id             Int           @id(map: "PK_cacbadeba0419609ac64dbb0382") @default(autoincrement())
  createdAt      DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime?     @db.Timestamptz(6)
  orderItemId    Int?          @unique(map: "REL_28598c157529a5dcf81cf58aa2")
  reviewItemId   Int?          @unique(map: "REL_6a429d7f427876346625a31811")
  customerId     Int?
  vehicleId      Int?
  catalogGroupId Int?
  productId      Int?
  OrderItem      OrderItem?    @relation(fields: [orderItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_28598c157529a5dcf81cf58aa22")
  CatalogGroup   CatalogGroup? @relation(fields: [catalogGroupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3a65113aaf4105d3dc39e0f986c")
  ReviewItem     ReviewItem?   @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6a429d7f427876346625a31811b")
  Product        Product?      @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderItemReview_productId")
  Customer       Customer?     @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b6f64b09d45d87b89216836c468")
  Vehicle        Vehicle?      @relation(fields: [vehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e8bcfe8aeb491726bf1649e1aca")
}

model OrderMemo {
  id                 Int       @id(map: "PK_65d0a1ecf9c602cab1c2c09dabd") @default(autoincrement())
  createdAt          DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime? @db.Timestamptz(6)
  orderNo            String    @db.VarChar(100)
  orderItemNo        String    @db.VarChar(100)
  manager            String    @db.VarChar(50)
  orderMemo          String    @db.VarChar(5000)
  repairShopViewable Boolean?
}

model Payment {
  id                  Int                          @id(map: "PK_07e9fb9a8751923eb876d57a575") @default(autoincrement())
  createdAt           DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime                     @default(now()) @db.Timestamptz(6)
  deletedAt           DateTime?                    @db.Timestamptz(6)
  paymentNo           String                       @db.VarChar(500)
  paymentStatus       Payment_paymentstatus_enum?
  paymentType         Payment_paymenttype_enum
  paymentChannel      Payment_paymentchannel_enum?
  paymentMethod       Payment_paymentmethod_enum?
  paymentMethodDetail String?                      @db.VarChar(100)
  productName         String                       @db.VarChar(500)
  paymentPrice        Float
  buyerName           String?                      @db.VarChar(50)
  buyerPhone          String?                      @db.VarChar(50)
  buyerEmail          String?                      @db.VarChar(100)

  @@index([paymentChannel, paymentStatus, paymentType], map: "IDX_702dd177a80de06af8ffabde72")
  @@index([paymentNo], map: "IDX_bcaf4b427aa4ae953ac6c52b74")
}

model Product {
  id                    Int                             @id(map: "PK_9fc040db7872192bbc26c515710") @default(autoincrement())
  createdAt             DateTime                        @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime                        @default(now()) @db.Timestamptz(6)
  deletedAt             DateTime?                       @db.Timestamptz(6)
  productName           String                          @db.VarChar(100)
  productModelNo        String                          @db.VarChar(100)
  productExposureTags   String[]                        @db.VarChar(100)
  productCompany        String                          @db.VarChar(100)
  productOrigin         String?                         @db.VarChar(100)
  madeAt                String?                         @db.VarChar(200)
  expiredAt             String?                         @db.VarChar(200)
  productIntroduction   String                          @db.VarChar(200)
  kcMarkNo              String?                         @db.VarChar(200)
  productBadge          Product_productbadge_enum?
  taxType               Product_taxtype_enum
  salePrice             Int
  discountRate          Int?
  exposurePrice         Int?
  productStockCheckable Boolean                         @default(true)
  isSoldOut             Boolean                         @default(false)
  productViewable       Boolean                         @default(true)
  productOptionType     Product_productoptiontype_enum?
  productMultipleOption Json?                           @db.Json
  paymentMethods        Product_paymentmethods_enum[]
  productRemark         String?                         @db.VarChar(100)
  productNotice         Json?                           @db.Json
  salesCount            Int                             @default(0)
  reviewCount           Int                             @default(0)
  productUniqueKey      String?                         @db.VarChar(100)
  productCategoryId     Int?
  productBrandId        Int?
  thumbnailMediaId      Int?
  deliveryTemplateId    Int?
  productOrderBy        Int?
  sixMonthCount         Int                             @default(0)
  OrderItemReview       OrderItemReview[]
  ProductBrand          ProductBrand?                   @relation(fields: [productBrandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0b22c880a519350cbc9bb24aad5")
  Media                 Media?                          @relation(fields: [thumbnailMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9f97a2f85493b8e1af3056787e4")
  ProductCategory       ProductCategory?                @relation(fields: [productCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a9d116fa9933f215502466a8177")
  DeliveryTemplate      DeliveryTemplate?               @relation(fields: [deliveryTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c3db76ff7f55ef37c5b2d2115ce")
  ProductMedia          ProductMedia[]
  ProductOption         ProductOption[]
  ProductSearchBridge   ProductSearchBridge[]
  ProductSpec           ProductSpec[]
  ShoppingBasket        ShoppingBasket[]

  @@index([productModelNo], map: "IDX_3d737be25e37170216104db91f")
  @@index([productName], map: "IDX_73337bae4f610f2aef184f44b6")
}

model ProductBrand {
  id                                                       Int                            @id(map: "PK_0f84f9d50751c5dcb4b020572c4") @default(autoincrement())
  createdAt                                                DateTime                       @default(now()) @db.Timestamptz(6)
  updatedAt                                                DateTime                       @default(now()) @db.Timestamptz(6)
  productBrandName                                         String                         @db.VarChar(100)
  productType                                              ProductBrand_producttype_enum?
  productBrandSortNumber                                   Int                            @default(0)
  productBrandRemark                                       String?                        @db.VarChar(100)
  isDiscontinued                                           Boolean?
  viewable                                                 Boolean                        @default(true)
  productBrandMediaId                                      Int?
  middleProductBrandMediaId                                Int?
  largeProductBrandMediaId                                 Int?
  mobileLargeProductBrandMediaId                           Int?
  Product                                                  Product[]
  Media_ProductBrand_productBrandMediaIdToMedia            Media?                         @relation("ProductBrand_productBrandMediaIdToMedia", fields: [productBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0ab31640643657c7b7bb43553b2")
  Media_ProductBrand_mobileLargeProductBrandMediaIdToMedia Media?                         @relation("ProductBrand_mobileLargeProductBrandMediaIdToMedia", fields: [mobileLargeProductBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1d009e301d5f0ab8db7e46097df")
  Media_ProductBrand_largeProductBrandMediaIdToMedia       Media?                         @relation("ProductBrand_largeProductBrandMediaIdToMedia", fields: [largeProductBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_82e5f877aa291d2682e59f67388")
  Media_ProductBrand_middleProductBrandMediaIdToMedia      Media?                         @relation("ProductBrand_middleProductBrandMediaIdToMedia", fields: [middleProductBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d1d5c356bd57ea69aac28fddc6c")
}

model ProductCategory {
  id                      Int               @id(map: "PK_6e66c6182b5d0091b7f0e2deb0b") @default(autoincrement())
  createdAt               DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime          @default(now()) @db.Timestamptz(6)
  deletedAt               DateTime?         @db.Timestamptz(6)
  productCategoryName     String            @db.VarChar(100)
  productCategoryDepth    Int               @default(1)
  viewable                Boolean           @default(true)
  weight                  Int               @default(1)
  productCategoryRemark   String?           @db.VarChar(100)
  parentProductCategoryId Int?
  CouponTemplate          CouponTemplate[]
  OrderItem               OrderItem[]
  Product                 Product[]
  ProductCategory         ProductCategory?  @relation("ProductCategoryToProductCategory", fields: [parentProductCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_fcc9e8a2c353018336caec4a5f8")
  other_ProductCategory   ProductCategory[] @relation("ProductCategoryToProductCategory")
  ProductSearch           ProductSearch[]
}

model ProductMedia {
  id            Int       @id(map: "PK_15085213268aa1c79291df41948") @default(autoincrement())
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt     DateTime? @db.Timestamptz(6)
  mediaId       Int
  productId     Int
  mediaPosition String?   @db.VarChar(10)
  Product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_23bfe027ed6421d861b443839c3")
  Media         Media     @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e75c32b45d376bf242c3048e1fe")

  @@index([productId], map: "productmedia_productid_idx")
}

model ProductOption {
  id                                  Int                                     @id(map: "PK_da7c241b6ab07d21f52704ea3c0") @default(autoincrement())
  createdAt                           DateTime                                @default(now()) @db.Timestamptz(6)
  updatedAt                           DateTime                                @default(now()) @db.Timestamptz(6)
  deletedAt                           DateTime?                               @db.Timestamptz(6)
  productOptionName                   String?                                 @db.VarChar(100)
  productOptionValue                  String?                                 @db.VarChar(100)
  productOptionAmount                 Int                                     @default(0)
  salePrice                           Int?
  discountRate                        Int?
  productOptionPrice                  Int
  productOptionTax                    Float
  productOptionTaxType                ProductOption_productoptiontaxtype_enum
  productOptionSoldOutable            Boolean?                                @default(false)
  productOptionViewable               Boolean?                                @default(true)
  productId                           Int
  extraProductOption                  Boolean?
  productOptionDescription            String?                                 @db.VarChar(2000)
  CouponApplyProductOption            CouponApplyProductOption[]
  CouponDiscountAssignedProductOption CouponDiscountAssignedProductOption[]
  OrderItemProductOption              OrderItemProductOption[]
  Product                             Product                                 @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d7affe929c9366b91b837cb1cac")
  ProductOptionItem                   ProductOptionItem[]
  ShoppingBasketItem                  ShoppingBasketItem[]
}

model ProductOptionItem {
  id              Int            @id(map: "PK_46e259cd27f165a5e08f126c430") @default(autoincrement())
  createdAt       DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?      @db.Timestamptz(6)
  productOptionId Int?
  catalogId       Int?
  ProductOption   ProductOption? @relation(fields: [productOptionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_869af769de527fc871ddc97d39b")
  Catalog         Catalog?       @relation(fields: [catalogId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_de4e698dfcd1a7e897b5543771b")

  @@index([productOptionId], map: "productoptionitem_productoptionid_idx")
}

model ProductPriceBulk {
  id              Int                           @id(map: "PK_3dd11c45e3de35ed6aa017fba7c") @default(autoincrement())
  createdAt       DateTime                      @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime                      @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?                     @db.Timestamptz(6)
  adjustedAt      DateTime                      @db.Timestamptz(6)
  productId       Int
  productOptionId Int
  erpCode         String?                       @db.VarChar(100)
  taxType         ProductPriceBulk_taxtype_enum
  salePrice       Int
  discountRate    Int?
  exposurePrice   Int?
  returnStatus    String?                       @db.VarChar(100)
  failReason      String?                       @db.VarChar(3000)
  registerId      Int?
  Administrator   Administrator?                @relation(fields: [registerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1ad0f469a92d907d01e84a34609")
}

model ProductSearch {
  id                    Int                   @id(map: "PK_59a9dc8f34ac1c55def211fc8bf") @default(autoincrement())
  createdAt             DateTime              @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime              @default(now()) @db.Timestamptz(6)
  productSearchName     String                @unique(map: "unique_product_search_name") @db.VarChar(100)
  searchViewable        Boolean               @default(true)
  searchLevel           Int
  parentProductSearchId Int?
  searchCondition       String?               @db.VarChar(100)
  productCategoryId     Int?
  ProductSearch         ProductSearch?        @relation("ProductSearchToProductSearch", fields: [parentProductSearchId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1c174f3cb54a71d3f3d156ef9ac")
  other_ProductSearch   ProductSearch[]       @relation("ProductSearchToProductSearch")
  ProductCategory       ProductCategory?      @relation(fields: [productCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8a79464611d2a42a24e34b43937")
  ProductSearchBridge   ProductSearchBridge[]
}

model ProductSearchBridge {
  id                 Int           @id(map: "PK_2ea4b6f6756749619cac6408453") @default(autoincrement())
  createdAt          DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime      @default(now()) @db.Timestamptz(6)
  productId          Int
  productSearchId    Int
  productSearchValue String?       @db.VarChar(200)
  Product            Product       @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2691490408c6fa30970006c3b32")
  ProductSearch      ProductSearch @relation(fields: [productSearchId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_646d7ba157c0a35c4b7b2f4c528")

  @@index([productId], map: "IDX_2691490408c6fa30970006c3b3")
  @@index([productSearchValue], map: "IDX_63ae99a978b37f28b3411b2e11")
}

model ProductSpec {
  id               Int      @id(map: "PK_210a02f9badace62cd8a8032324") @default(autoincrement())
  createdAt        DateTime @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime @default(now()) @db.Timestamptz(6)
  productSpecKey   String   @db.VarChar(100)
  productSpecValue String   @db.VarChar(200)
  productId        Int
  Product          Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6571855666ad3e880e223cf15f9")

  @@index([productSpecValue], map: "productSpec_productSpecValue")
  @@index([productId], map: "productSpec_product_idx")
}

model Promotion {
  id                                           Int                            @id(map: "PK_d21eaf286df75f58d90e63d586b") @default(autoincrement())
  createdAt                                    DateTime                       @default(now()) @db.Timestamptz(6)
  updatedAt                                    DateTime                       @default(now()) @db.Timestamptz(6)
  deletedAt                                    DateTime?                      @db.Timestamptz(6)
  promotionName                                String                         @db.VarChar(100)
  promotionStatus                              Promotion_promotionstatus_enum
  promotionAvailableTo                         DateTime                       @db.Timestamptz(6)
  promotionAvailableFrom                       DateTime                       @db.Timestamptz(6)
  promotionAnchorColor                         String?                        @db.VarChar(30)
  promotionNotice                              String?                        @db.VarChar(2000)
  displayName                                  String?                        @db.VarChar(100)
  displayDescription                           String?                        @db.VarChar(100)
  displayType                                  Promotion_displaytype_enum?
  displayProductIds                            Int[]
  weight                                       Int?
  couponBackground                             String?                        @db.VarChar(30)
  couponAreaColor                              String?                        @db.VarChar(20)
  couponIds                                    Int[]
  promotionMediaId                             Int
  promotionShareMediaId                        Int
  displayMediaId                               Int?
  isActivatedCoupon                            Boolean                        @default(false)
  isDisplayCouponButton                        Boolean?
  promotionThemeColor                          String?                        @db.VarChar(30)
  Media_Promotion_displayMediaIdToMedia        Media?                         @relation("Promotion_displayMediaIdToMedia", fields: [displayMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_09b1f9b732e2f5cde61f520bcd6")
  Media_Promotion_promotionShareMediaIdToMedia Media                          @relation("Promotion_promotionShareMediaIdToMedia", fields: [promotionShareMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_51d72026e9cc4322e82d5f8e5f7")
  Media_Promotion_promotionMediaIdToMedia      Media                          @relation("Promotion_promotionMediaIdToMedia", fields: [promotionMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_975cb9df7661c96e1d426ec5779")
  PromotionProductGroup                        PromotionProductGroup[]
}

model PromotionProductGroup {
  id                      Int        @id(map: "PK_19380fa370c122c7c7264858ab8") @default(autoincrement())
  createdAt               DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime   @default(now()) @db.Timestamptz(6)
  deletedAt               DateTime?  @db.Timestamptz(6)
  productGroupName        String     @db.VarChar(5)
  productGroupTitle       String     @db.VarChar(20)
  productGroupDescription String?    @db.VarChar(40)
  productGroupProductIds  Int[]
  promotionId             Int?
  Promotion               Promotion? @relation(fields: [promotionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_06ffba9e4e4fb93ed74bb3a2091")
}

model PublicHoliday {
  id                Int       @id(map: "PK_238f6f59dd29feaa2bc8643ac7b") @default(autoincrement())
  createdAt         DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime  @default(now()) @db.Timestamptz(6)
  publicYear        String?   @db.VarChar(5)
  publicMonth       String?   @db.VarChar(3)
  publicHoliday     DateTime? @db.Timestamptz(6)
  publicHolidayName String    @db.VarChar(100)
  customerRemark    String?   @db.VarChar(100)
  publicDate        String?   @db.VarChar(3)
}

model PushAlarm {
  id             Int       @id(map: "PK_1bd694f4b4d49efea6d1f7a6769") @default(autoincrement())
  createdAt      DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime? @db.Timestamptz(6)
  pushAlarmTitle String?   @db.VarChar(255)
  pushAlarmBody  String    @db.VarChar(3000)
  readAt         DateTime? @db.Timestamp(6)
  readable       Boolean   @default(false)
  isRead         Boolean   @default(false)
  responseStatus Boolean?
  payload        Json?     @db.Json
  accountId      Int
  Account        Account   @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2b64680ea0a198a7e7e51392a62")
}

model Recommendation {
  id                                                         Int                @id(map: "PK_fbe60fe175bf46079eee4713965") @default(autoincrement())
  createdAt                                                  DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt                                                  DateTime           @default(now()) @db.Timestamptz(6)
  deletedAt                                                  DateTime?          @db.Timestamptz(6)
  recommendationType                                         String?            @db.VarChar(100)
  joinedAt                                                   DateTime?          @db.Timestamptz(6)
  completedAt                                                DateTime?          @db.Timestamptz(6)
  issuedAt                                                   DateTime?          @db.Timestamptz(6)
  tireOrder                                                  String?
  batteryOrder                                               String?
  washOrder                                                  String?
  engineoilOrder                                             String?
  recommendationCustomerId                                   Int?
  recommenderCustomerId                                      Int?
  GiftyshowHistory                                           GiftyshowHistory[]
  Customer_Recommendation_recommenderCustomerIdToCustomer    Customer?          @relation("Recommendation_recommenderCustomerIdToCustomer", fields: [recommenderCustomerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_19bc7b324f21f80c97a462de8eb")
  Customer_Recommendation_recommendationCustomerIdToCustomer Customer?          @relation("Recommendation_recommendationCustomerIdToCustomer", fields: [recommendationCustomerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_af98341dbdd0994a23d5ed33873")
}

model Region {
  id           Int       @id(map: "PK_7db3a94690d9263fc6214b8966d") @default(autoincrement())
  createdAt    DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt    DateTime? @db.Timestamptz(6)
  regionName   String    @db.VarChar(30)
  sortNumber   Int?
  sidoRegionId Int?
  Region       Region?   @relation("RegionToRegion", fields: [sidoRegionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1795d7935538dc91b01971a36d4")
  other_Region Region[]  @relation("RegionToRegion")
}

model RentalCarBrand {
  id                     Int              @id(map: "PK_c6f93b00c5c339b5b6810823521") @default(autoincrement())
  createdAt              DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime         @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?        @db.Timestamptz(6)
  rentalCarBrandName     String           @db.VarChar(50)
  viewable               Boolean          @default(false)
  parentRentalCarBrandId Int?
  RentalCarBrand         RentalCarBrand?  @relation("RentalCarBrandToRentalCarBrand", fields: [parentRentalCarBrandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_424498a81d5855b9e847bad121f")
  other_RentalCarBrand   RentalCarBrand[] @relation("RentalCarBrandToRentalCarBrand")
}

model Repair {
  id                     Int                          @id(map: "PK_b0cf0f703d24f165551abf2713e") @default(autoincrement())
  createdAt              DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime                     @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?                    @db.Timestamptz(6)
  reservedAt             DateTime?                    @db.Timestamptz(6)
  repairNo               String                       @db.VarChar(100)
  customerName           String                       @db.VarChar(100)
  customerVehicleNo      String?                      @db.VarChar(20)
  vehicleBrand           String?                      @db.VarChar(100)
  vehicleModel           String?                      @db.VarChar(100)
  vehicleTrim            String?                      @db.VarChar(300)
  isDomestic             Boolean?
  frontTire              String?                      @db.VarChar(100)
  rearTire               String?                      @db.VarChar(100)
  isWheelAlignment       Boolean                      @default(false)
  pendedAt               DateTime?                    @db.Timestamptz(6)
  canceledAt             DateTime?                    @db.Timestamptz(6)
  paymentCompletedAt     DateTime?                    @db.Timestamptz(6)
  reservationCompletedAt DateTime?                    @db.Timestamptz(6)
  completedAt            DateTime?                    @db.Timestamptz(6)
  partnerTimeChecked     Boolean?
  partnerRepairNo        String?                      @db.VarChar(100)
  isNextDayDelivery      Boolean?
  repairShopId           Int?
  customerId             Int?
  customerVehicleId      Int?
  repairShopLabel        Repair_repairshoplabel_enum?
  RepairShop             RepairShop?                  @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_443df26c8454c803c04c7c9460d")
  Customer               Customer?                    @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8286d3edbcb9feeb53e8080e855")
  CustomerVehicle        CustomerVehicle?             @relation(fields: [customerVehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d533d81b2ee0cfc81a46b42dc0e")
  RepairItem             RepairItem[]
}

model RepairBookingReschedule {
  id               Int       @id(map: "PK_90597da03e113d6f73bc2f97846") @default(autoincrement())
  createdAt        DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime? @db.Timestamptz(6)
  orderedAtFrom    DateTime  @db.Timestamptz(6)
  orderedAtTo      DateTime  @db.Timestamptz(6)
  isCapital        Boolean
  bookableDate     DateTime  @db.Timestamptz(6)
  bookableDateTime DateTime  @db.Timestamptz(6)
}

model RepairItem {
  id              Int                             @id(map: "PK_5a6e4808f743d4419b7cad46c95") @default(autoincrement())
  createdAt       DateTime                        @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime                        @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?                       @db.Timestamptz(6)
  repairItemNo    String?                         @db.VarChar(100)
  inch            String?                         @db.VarChar(20)
  repairAmount    Int
  repairPrice     Float
  repairTax       Float
  repairTaxType   RepairItem_repairtaxtype_enum
  purchasePrice   Float                           @default(0)
  purchaseTax     Float                           @default(0)
  purchaseTaxType RepairItem_purchasetaxtype_enum @default(TAX)
  canceledAt      DateTime?                       @db.Timestamptz(6)
  repairId        Int
  detail          String?                         @db.VarChar(20)
  Repair          Repair                          @relation(fields: [repairId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_357aa2f6df6444c14ba03ec9bdc")
}

model RepairShop {
  id                                                                     Int                                      @id(map: "PK_61713f6abb14be86fe3702a3935") @default(autoincrement())
  createdAt                                                              DateTime                                 @default(now()) @db.Timestamptz(6)
  updatedAt                                                              DateTime                                 @default(now()) @db.Timestamptz(6)
  deletedAt                                                              DateTime?                                @db.Timestamptz(6)
  repairShopAId                                                          String                                   @db.VarChar(200)
  displayName                                                            String                                   @db.VarChar(200)
  repairShopVendorCode                                                   String?                                  @db.VarChar(100)
  repairShopName                                                         String?                                  @db.VarChar(200)
  managerName                                                            String                                   @db.VarChar(200)
  managerPhone                                                           String                                   @db.VarChar(200)
  managerEmail                                                           String?                                  @db.VarChar(200)
  tel                                                                    String                                   @db.VarChar(20)
  liftCount                                                              Int
  employeeCount                                                          Int
  maximumWeekdayVehicleCount                                             Int?
  maximumWeekendVehicleCount                                             Int?
  foreignWAHandleable                                                    Boolean
  domesticWAHandleable                                                   Boolean
  rFTHandleable                                                          Boolean
  domesticLightRepairHandleable                                          Boolean?
  foreignLightRepairHandleable                                           Boolean                                  @default(false)
  foreignCarHandleable                                                   Boolean
  waitingRoomExistence                                                   Boolean
  twentyInchTireHandleable                                               Boolean
  domesticEngineOilExchangeable                                          Boolean?
  domesticBatteryExchangeable                                            Boolean?
  foreignEngineOilExchangeable                                           Boolean?
  foreignBatteryExchangeable                                             Boolean?
  truckAcceptable                                                        Boolean?
  bongoAcceptable                                                        Boolean?
  porterLowTopAcceptable                                                 Boolean?
  porterHighTopAcceptable                                                Boolean?
  moreDetail                                                             String?                                  @db.VarChar(2000)
  introduction                                                           String?                                  @db.VarChar(2000)
  regionDepth1                                                           String?                                  @db.VarChar
  regionDepth2                                                           String?                                  @db.VarChar
  regionDepth3                                                           String?                                  @db.VarChar
  zipCode                                                                String                                   @db.VarChar
  country                                                                String                                   @db.VarChar
  detail                                                                 String?                                  @db.VarChar
  street                                                                 String?                                  @db.VarChar
  zibun                                                                  String?                                  @db.VarChar
  approvedAt                                                             DateTime?                                @db.Timestamptz(6)
  returnedAt                                                             DateTime?                                @db.Timestamptz(6)
  operatedAt                                                             DateTime?                                @db.Timestamptz(6)
  lat                                                                    String?                                  @db.VarChar(30)
  lng                                                                    String?                                  @db.VarChar(30)
  repairShopGeometry                                                     Unsupported("geometry")?
  repairShopStatusType                                                   RepairShop_repairshopstatustype_enum?
  repairShopCode                                                         String?                                  @db.VarChar(50)
  businessRegistrationNumber                                             String?                                  @db.VarChar(15)
  returnedReason                                                         String?                                  @db.VarChar(100)
  visitedCustomerCount                                                   Int                                      @default(0)
  repairShopType                                                         RepairShop_repairshoptype_enum?
  repairShopFranchiseType                                                RepairShop_repairshopfranchisetype_enum? @default(ETC)
  subManagerPhoneList                                                    String[]                                 @db.VarChar
  repairShopLabel                                                        RepairShop_repairshoplabel_enum?
  updatedUserName                                                        String?                                  @db.VarChar(100)
  businessMediaId                                                        Int?                                     @unique(map: "REL_c263e3977d52840135104a2842")
  repairShopBusinessId                                                   Int?                                     @unique(map: "REL_ac577826149335be1abecec7c3")
  accountId                                                              Int?                                     @unique(map: "REL_c83fecbe2f89d6c7b3e4aef38a")
  updatedAccountId                                                       Int?
  isMaster                                                               Boolean?                                 @default(false)
  repairShopOptionId                                                     Int?                                     @unique(map: "UQ_dcd46c890b33db2501a180401ed")
  Inquiry                                                                Inquiry[]
  Repair                                                                 Repair[]
  Account_RepairShop_updatedAccountIdToAccount                           Account?                                 @relation("RepairShop_updatedAccountIdToAccount", fields: [updatedAccountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_15716d64571ddbce8b26672c5f6")
  RepairShopBusiness_RepairShop_repairShopBusinessIdToRepairShopBusiness RepairShopBusiness?                      @relation("RepairShop_repairShopBusinessIdToRepairShopBusiness", fields: [repairShopBusinessId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ac577826149335be1abecec7c3c")
  Media                                                                  Media?                                   @relation(fields: [businessMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c263e3977d52840135104a28429")
  Account_RepairShop_accountIdToAccount                                  Account?                                 @relation("RepairShop_accountIdToAccount", fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c83fecbe2f89d6c7b3e4aef38ac")
  RepairShopOption                                                       RepairShopOption?                        @relation(fields: [repairShopOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dcd46c890b33db2501a180401ed")
  RepairShopBusiness_RepairShopBusiness_repairShopIdToRepairShop         RepairShopBusiness?                      @relation("RepairShopBusiness_repairShopIdToRepairShop")
  RepairShopFee                                                          RepairShopFee[]
  RepairShopMaster_RepairShopMaster_repairShopIdToRepairShop             RepairShopMaster[]                       @relation("RepairShopMaster_repairShopIdToRepairShop")
  RepairShopMaster_RepairShopMaster_parentRepairShopIdToRepairShop       RepairShopMaster[]                       @relation("RepairShopMaster_parentRepairShopIdToRepairShop")
  RepairShopMedia                                                        RepairShopMedia[]
  RepairShopReview                                                       RepairShopReview[]
  RepairShopTemporaryBusiness                                            RepairShopTemporaryBusiness[]
  RepairShopUnableTime                                                   RepairShopUnableTime[]

  @@index([repairShopAId], map: "IDX_95408176ba838f577aa8fb4568")
}

model RepairShopBreakTime {
  id                            Int                                      @id(map: "PK_a986f2a3d91efa97ee139570eeb") @default(autoincrement())
  createdAt                     DateTime                                 @default(now()) @db.Timestamptz(6)
  updatedAt                     DateTime                                 @default(now()) @db.Timestamptz(6)
  deletedAt                     DateTime?                                @db.Timestamptz(6)
  breakDayTypes                 RepairShopBreakTime_breakdaytypes_enum
  startBreakTime                DateTime?                                @db.Time(6)
  endBreakTime                  DateTime?                                @db.Time(6)
  breakTimeTypes                RepairShopBreakTime_breaktimetypes_enum?
  groupIndex                    Int?
  repairShopBusinessId          Int?
  repairShopTemporaryBusinessId Int?
  RepairShopTemporaryBusiness   RepairShopTemporaryBusiness?             @relation(fields: [repairShopTemporaryBusinessId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_100f582431a4814ae11576029b6")
  RepairShopBusiness            RepairShopBusiness?                      @relation(fields: [repairShopBusinessId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f02f9ec8595ababc462912aacfd")
}

model RepairShopBusiness {
  id                                                             Int                                                 @id(map: "PK_19a5549c1c0333d84160ff4bf5f") @default(autoincrement())
  createdAt                                                      DateTime                                            @default(now()) @db.Timestamptz(6)
  updatedAt                                                      DateTime                                            @default(now()) @db.Timestamptz(6)
  deletedAt                                                      DateTime?                                           @db.Timestamptz(6)
  repairShopHolidayWorkdays                                      RepairShopBusiness_repairshopholidayworkdays_enum[]
  maximumSimultaneouslyVehicleCount                              Int?
  maximumMorningVehicleCount                                     Int?
  maximumAfternoonVehicleCount                                   Int?
  reservationInterval                                            RepairShopBusiness_reservationinterval_enum?
  mondayStartBusinessTime                                        DateTime?                                           @db.Time(6)
  mondayEndBusinessTime                                          DateTime?                                           @db.Time(6)
  tuesdayStartBusinessTime                                       DateTime?                                           @db.Time(6)
  tuesdayEndBusinessTime                                         DateTime?                                           @db.Time(6)
  wednesdayStartBusinessTime                                     DateTime?                                           @db.Time(6)
  wednesdayEndBusinessTime                                       DateTime?                                           @db.Time(6)
  thursdayStartBusinessTime                                      DateTime?                                           @db.Time(6)
  thursdayEndBusinessTime                                        DateTime?                                           @db.Time(6)
  fridayStartBusinessTime                                        DateTime?                                           @db.Time(6)
  fridayEndBusinessTime                                          DateTime?                                           @db.Time(6)
  saturdayStartBusinessTime                                      DateTime?                                           @db.Time(6)
  saturdayEndBusinessTime                                        DateTime?                                           @db.Time(6)
  sundayStartBusinessTime                                        DateTime?                                           @db.Time(6)
  sundayEndBusinessTime                                          DateTime?                                           @db.Time(6)
  holidayStartBusinessTime                                       DateTime?                                           @db.Time(6)
  holidayEndBusinessTime                                         DateTime?                                           @db.Time(6)
  businessDayTypes                                               RepairShopBusiness_businessdaytypes_enum?
  mondayMaximumMorningVehicleCount                               Int?
  mondayMaximumAfternoonVehicleCount                             Int?
  tuesdayMaximumMorningVehicleCount                              Int?
  tuesdayMaximumAfternoonVehicleCount                            Int?
  wednesdayMaximumMorningVehicleCount                            Int?
  wednesdayMaximumAfternoonVehicleCount                          Int?
  thursdayMaximumMorningVehicleCount                             Int?
  thursdayMaximumAfternoonVehicleCount                           Int?
  fridayMaximumMorningVehicleCount                               Int?
  fridayMaximumAfternoonVehicleCount                             Int?
  saturdayMaximumMorningVehicleCount                             Int?
  saturdayMaximumAfternoonVehicleCount                           Int?
  sundayMaximumMorningVehicleCount                               Int?
  sundayMaximumAfternoonVehicleCount                             Int?
  repairShopId                                                   Int                                                 @unique(map: "REL_18914fef920e10a9318be90f84")
  RepairShop_RepairShop_repairShopBusinessIdToRepairShopBusiness RepairShop?                                         @relation("RepairShop_repairShopBusinessIdToRepairShopBusiness")
  RepairShopBreakTime                                            RepairShopBreakTime[]
  RepairShop_RepairShopBusiness_repairShopIdToRepairShop         RepairShop                                          @relation("RepairShopBusiness_repairShopIdToRepairShop", fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_18914fef920e10a9318be90f848")
  RepairShopDayOff                                               RepairShopDayOff[]
}

model RepairShopDayOff {
  id                   Int                               @id(map: "PK_19332b43e2604be2211481f138d") @default(autoincrement())
  createdAt            DateTime                          @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime                          @default(now()) @db.Timestamptz(6)
  deletedAt            DateTime?                         @db.Timestamptz(6)
  dayOffWeek           RepairShopDayOff_dayoffweek_enum?
  dayOffDay            RepairShopDayOff_dayoffday_enum?
  repairShopBusinessId Int
  RepairShopBusiness   RepairShopBusiness                @relation(fields: [repairShopBusinessId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_66d6d16d009e5260a37a605b03a")
}

model RepairShopFee {
  id                  Int         @id(map: "PK_8fe67d09ee8057dfdcc51342eea") @default(autoincrement())
  createdAt           DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime    @default(now()) @db.Timestamptz(6)
  startedAt           DateTime?   @db.Timestamptz(6)
  endedAt             DateTime?   @db.Timestamptz(6)
  feeData             Json?       @db.Json
  repairShopFeeRemark String?     @db.VarChar(100)
  repairShopId        Int?
  RepairShop          RepairShop? @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_93627e058a94c470d53513049be")
}

model RepairShopMaster {
  id                                                         Int        @id(map: "PK_2d69f09412172b1cccd40082b79") @default(autoincrement())
  createdAt                                                  DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt                                                  DateTime   @default(now()) @db.Timestamptz(6)
  parentRepairShopId                                         Int
  repairShopId                                               Int
  RepairShop_RepairShopMaster_repairShopIdToRepairShop       RepairShop @relation("RepairShopMaster_repairShopIdToRepairShop", fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_19602ffc124a85a54389bbb2566")
  RepairShop_RepairShopMaster_parentRepairShopIdToRepairShop RepairShop @relation("RepairShopMaster_parentRepairShopIdToRepairShop", fields: [parentRepairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_82793bfc9645388c3aa94896155")
}

model RepairShopMedia {
  id           Int                        @id(map: "PK_e03305f04b9d8c1d2caf9f16e8b") @default(autoincrement())
  createdAt    DateTime                   @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime                   @default(now()) @db.Timestamptz(6)
  type         RepairShopMedia_type_enum?
  repairShopId Int?
  mediaId      Int?
  RepairShop   RepairShop?                @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_222ef037aab147a553dc124cfa3")
  Media        Media?                     @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_90b4696f574ead3a00fa19a6d7f")
}

model RepairShopOption {
  id         Int         @id(map: "PK_33737181ef095e185d079e1d78a") @default(autoincrement())
  createdAt  DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime    @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime?   @db.Timestamptz(6)
  options    Json?
  RepairShop RepairShop?
}

model RepairShopReview {
  id                 Int                                    @id(map: "PK_ed165c65e818077a9ee8b9b1f2a") @default(autoincrement())
  createdAt          DateTime                               @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                               @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?                              @db.Timestamptz(6)
  reviewAnswer       String?                                @db.VarChar(100)
  answerRegisteredAt DateTime?                              @db.Timestamptz(6)
  repairShopLabel    RepairShopReview_repairshoplabel_enum?
  repairShopId       Int?
  reviewItemId       Int?                                   @unique(map: "REL_0beace2bb61f28f3cc0c373922")
  customerId         Int?
  ReviewItem         ReviewItem?                            @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0beace2bb61f28f3cc0c3739227")
  RepairShop         RepairShop?                            @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a1f6ee51cf9268d4dd084a3e33d")
  Customer           Customer?                              @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e181a2b4e934d2425cb085b301f")

  @@index([repairShopId], map: "IDX_a1f6ee51cf9268d4dd084a3e33")
}

model RepairShopTemporaryBusiness {
  id                         Int                                                     @id(map: "PK_5c254549d01ce0c5610204225e2") @default(autoincrement())
  createdAt                  DateTime                                                @default(now()) @db.Timestamptz(6)
  updatedAt                  DateTime                                                @default(now()) @db.Timestamptz(6)
  deletedAt                  DateTime?                                               @db.Timestamptz(6)
  startBusinessTime          DateTime?                                               @db.Time(6)
  endBusinessTime            DateTime?                                               @db.Time(6)
  temporaryBusinessStartedAt DateTime?                                               @db.Timestamptz(6)
  temporaryBusinessEndedAt   DateTime?                                               @db.Timestamptz(6)
  temporaryBusinessType      RepairShopTemporaryBusiness_temporarybusinesstype_enum?
  temporaryClosedReason      String?                                                 @db.VarChar(1000)
  repairShopId               Int
  RepairShopBreakTime        RepairShopBreakTime[]
  RepairShop                 RepairShop                                              @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e63493a8aa54a98f28229a12213")
}

model RepairShopUnableTime {
  id                Int        @id(map: "PK_8b89a9db60a810e5f05ee75ba1f") @default(autoincrement())
  createdAt         DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime   @default(now()) @db.Timestamptz(6)
  businessUnabledAt DateTime   @db.Timestamptz(6)
  repairShopId      Int
  RepairShop        RepairShop @relation(fields: [repairShopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e724d008b9689c6bdcb1a0bcf94")
}

model Review {
  id                           Int           @id(map: "PK_4af5ddfa8a65e5571d851e4b752") @default(autoincrement())
  createdAt                    DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt                    DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt                    DateTime?     @db.Timestamptz(6)
  reviewContent                String        @db.VarChar(2000)
  customerId                   Int?
  orderId                      Int?          @unique(map: "REL_b8a4c8029483e2648a092addd5")
  Order_Order_reviewIdToReview Order?        @relation("Order_reviewIdToReview")
  Customer                     Customer?     @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_53c0dde25713b25709963f6265c")
  Order_Review_orderIdToOrder  Order?        @relation("Review_orderIdToOrder", fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b8a4c8029483e2648a092addd54")
  ReviewClaim                  ReviewClaim[]
  ReviewItem                   ReviewItem[]
  ReviewMedia                  ReviewMedia[]
}

model ReviewClaim {
  id           Int         @id(map: "PK_8f4dd668ce9b9d0400e4c0a1be4") @default(autoincrement())
  createdAt    DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime    @default(now()) @db.Timestamptz(6)
  deletedAt    DateTime?   @db.Timestamptz(6)
  reviewId     Int?
  claimId      Int
  reviewItemId Int?
  Claim        Claim       @relation(fields: [claimId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4d3aa5328e120ef6a11d68b4c7f")
  ReviewItem   ReviewItem? @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReviewClaim_reviewItemId")
  Review       Review?     @relation(fields: [reviewId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_afe9db8f559ac15797f6e1834b5")
}

model ReviewItem {
  id                       Int                               @id(map: "PK_fb589d1b67cf4ed637506383c4a") @default(autoincrement())
  createdAt                DateTime                          @default(now()) @db.Timestamptz(6)
  updatedAt                DateTime                          @default(now()) @db.Timestamptz(6)
  deletedAt                DateTime?                         @db.Timestamptz(6)
  reviewScore              Int
  reviewItemLabels         String[]                          @db.VarChar(100)
  reviewId                 Int?
  reviewContent            String?                           @db.VarChar(2000)
  viewable                 Boolean                           @default(true)
  viewableOnMain           Boolean                           @default(false)
  customerId               Int?
  orderId                  Int?
  reviewType               ReviewLabel_reviewlabeltype_enum?
  reviewWeight             Int                               @default(0)
  BatteryRushReview        BatteryRushReview?
  OrderItemReview          OrderItemReview?
  RepairShopReview         RepairShopReview?
  ReviewClaim              ReviewClaim[]
  Review                   Review?                           @relation(fields: [reviewId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8287756c0aac84e9d1abc8f6fe1")
  Customer                 Customer?                         @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReviewItem_customerId")
  Order                    Order?                            @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReviewItem_orderId")
  ReviewMedia              ReviewMedia[]
  ValetReview              ValetReview?
  VehicleWashStationReview VehicleWashStationReview?

  @@index([reviewType], map: "IDX_ReviewItem_reviewType")
  @@index([viewableOnMain], map: "IDX_ReviewItem_viewableOnMain")
  @@index([createdAt], map: "IDX_ReviewItem_createdAt")
  @@index([reviewScore], map: "IDX_ReviewItem_reviewScore")
  @@index([reviewWeight], map: "IDX_ReviewItem_reviewWeight")
}

model ReviewLabel {
  id              Int                              @id(map: "PK_b457f503b0cf3b7cb7d2b84bb43") @default(autoincrement())
  createdAt       DateTime                         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime                         @default(now()) @db.Timestamptz(6)
  deletedAt       DateTime?                        @db.Timestamptz(6)
  reviewLabelType ReviewLabel_reviewlabeltype_enum
  reviewLabelJson Json                             @db.Json
}

model ReviewMedia {
  id           Int         @id(map: "PK_26331cb6106a388591078e54428") @default(autoincrement())
  createdAt    DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime    @default(now()) @db.Timestamptz(6)
  reviewId     Int?
  mediaId      Int
  reviewItemId Int?
  Review       Review?     @relation(fields: [reviewId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_724895a8b440f7027da08699c46")
  ReviewItem   ReviewItem? @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReviewMedia_reviewItemId")
  Media        Media       @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f930b90f5db8ab936c97af5b82f")
}

model ServicePrice {
  id             Int                              @id(map: "PK_c95d93c5ac6f7c70b142a0be385") @default(autoincrement())
  createdAt      DateTime                         @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime                         @default(now()) @db.Timestamptz(6)
  deletedAt      DateTime?                        @db.Timestamptz(6)
  serviceKey     String                           @db.VarChar(100)
  serviceType    ServicePrice_servicetype_enum
  serviceSubKey  String?                          @db.VarChar(100)
  servicePrice   Int
  serviceTax     Int
  serviceTaxType ServicePrice_servicetaxtype_enum
  register       String?                          @db.VarChar(100)
}

model ShoppingBasket {
  id                   Int                                     @id(map: "PK_c0b760b9e6650521dceb9265b8e") @default(autoincrement())
  createdAt            DateTime                                @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime                                @default(now()) @db.Timestamptz(6)
  shoppingBasketAmount Int
  customerId           Int
  productId            Int
  customerVehicleId    Int?
  shoppingBasketType   ShoppingBasket_shoppingbaskettype_enum?
  Customer             Customer                                @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_58eb6055ef89a235a0df7c8de69")
  Product              Product                                 @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b6daf900c6e227b25d4ac1a2c97")
  CustomerVehicle      CustomerVehicle?                        @relation(fields: [customerVehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c8b8bc9defe146fc88f50f4d5d0")
  ShoppingBasketItem   ShoppingBasketItem[]
}

model ShoppingBasketItem {
  id                  Int            @id(map: "PK_fafc5809830b432882e630af152") @default(autoincrement())
  createdAt           DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime       @default(now()) @db.Timestamptz(6)
  productOptionAmount Int
  shoppingBasketId    Int
  productOptionId     Int
  ProductOption       ProductOption  @relation(fields: [productOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3b16e67d95999d2a549adc71a0c")
  ShoppingBasket      ShoppingBasket @relation(fields: [shoppingBasketId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f13320e1383f5f03ca2bab9134c")
}

model SpecTemplate {
  id        Int                        @id(map: "PK_88812bf326a06b210c1995f571d") @default(autoincrement())
  createdAt DateTime                   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime                   @default(now()) @db.Timestamptz(6)
  specType  SpecTemplate_spectype_enum
  key       String                     @db.VarChar(100)
  subKey    String?                    @db.VarChar(100)
  specs     Json?                      @db.Json
}

model Stock {
  id          Int                    @id(map: "PK_2725537b7bbe40073a50986598d") @default(autoincrement())
  createdAt   DateTime               @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime               @default(now()) @db.Timestamptz(6)
  deletedAt   DateTime?              @db.Timestamptz(6)
  sku         String?                @db.VarChar(100)
  stockStatus Stock_stockstatus_enum
  catalogId   Int
  vendorId    Int?
  warehouseId Int?
  Catalog     Catalog                @relation(fields: [catalogId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5160a5ba058d0887a6cc1cd43f7")
  Vendor      Vendor?                @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_636607dbfb75e281a8d2205a334")
  Warehouse   Warehouse?             @relation(fields: [warehouseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b9f7a4fdd5b07b09627e8d39a5f")
}

model Task {
  id          Int           @id(map: "PK_95d9364b8115119ba8b15a43592") @default(autoincrement())
  createdAt   DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime      @default(now()) @db.Timestamptz(6)
  taskName    String?       @db.VarChar(100)
  requester   String?       @db.VarChar(100)
  TaskHistory TaskHistory[]
}

model TaskHistory {
  id           Int      @id(map: "PK_9cf73a062072c9edcfc883fb558") @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @db.Timestamptz(6)
  uniqueNo     String?  @db.VarChar(1000)
  returnStatus String?  @db.VarChar(100)
  failReason   String?  @db.VarChar(3000)
  taskId       Int
  Task         Task     @relation(fields: [taskId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0d42c840a529301aa32e9ba7765")

  @@index([uniqueNo], map: "IDX_45b8ed291074dae76fce6c10c6")
}

model Terms {
  id                   Int                    @id(map: "PK_956b73a2f98ef8adb5e9f63f08f") @default(autoincrement())
  createdAt            DateTime               @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime               @default(now()) @db.Timestamptz(6)
  deletedAt            DateTime?              @db.Timestamptz(6)
  service              String                 @default("default-app") @db.VarChar(100)
  title                String?                @db.VarChar(100)
  viewable             Boolean
  optionable           Boolean
  sortNumber           Int?
  AccountOptionalTerms AccountOptionalTerms[]
  TermsHistory         TermsHistory[]
}

model TermsHistory {
  id         Int       @id(map: "PK_f926425ce6f3233b1520389aed0") @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime? @db.Timestamptz(6)
  termsId    Int
  body       String    @db.VarChar(1000000)
  releasedAt DateTime  @db.Timestamptz(6)
  Terms      Terms     @relation(fields: [termsId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_182f4b2d3b0f20251a958120279")
}

model ThirdPartyLogging {
  id                      Int                                  @id(map: "PK_c40774495fba86364fe368619d6") @default(autoincrement())
  createdAt               DateTime                             @db.Timestamptz(6)
  thirdPartyInterface     String                               @db.VarChar(100)
  thirdPartyInterfaceName String?                              @db.VarChar(100)
  requestData             String                               @db.VarChar(5000)
  responseData            String?                              @db.VarChar(20000)
  resultStatus            ThirdPartyLogging_resultstatus_enum?
  ipAddress               String?                              @db.VarChar(100)
  searchArray             String[]                             @db.VarChar(200)
}

model TireSize {
  id          Int                     @id(map: "PK_e0c2d0b39c0cceffb798c4cfe21") @default(autoincrement())
  createdAt   DateTime                @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime                @default(now()) @db.Timestamptz(6)
  tireType    TireSize_tiretype_enum?
  width       String?                 @db.VarChar(10)
  aspectRatio String?                 @db.VarChar(10)
  inch        String?                 @db.VarChar(10)
  strength    String?                 @db.VarChar(10)
}

model TireTreadCheck {
  id               Int            @id(map: "PK_693f1970ba68a000369f8b0e909") @default(autoincrement())
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime       @default(now()) @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
  dangerThreshold  Float?
  tireAge          String?        @db.VarChar(100)
  color            Int?
  dot              String?        @db.VarChar(100)
  specification    String?        @db.VarChar(100)
  innerValue       Float?
  repairTips       String?        @db.VarChar(1000)
  tirePhoto        String?        @db.VarChar(200)
  wornOut          String?        @db.VarChar(300)
  outerValue       Float?
  alertThreshold   Float?
  brand            String?        @db.VarChar(100)
  value            Float
  recallNotice     Int
  status           String?        @db.VarChar(100)
  eachTreadCheckId Int            @unique(map: "REL_a6b69080a0a08f10a27fec0479")
  EachTreadCheck   EachTreadCheck @relation(fields: [eachTreadCheckId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a6b69080a0a08f10a27fec04792")
}

model Transaction {
  id                     Int                                   @id(map: "PK_21eda4daffd2c60f76b81a270e9") @default(autoincrement())
  createdAt              DateTime                              @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime                              @default(now()) @db.Timestamptz(6)
  deletedAt              DateTime?                             @db.Timestamptz(6)
  transactionType        Transaction_transactiontype_enum
  isGoodsReturn          Boolean
  transactionNo          String                                @db.VarChar(100)
  transactionUnitNo      Int
  transactionItemName    String                                @db.VarChar(500)
  transactionItemCode    String                                @db.VarChar(100)
  transactionItemAmount  Int
  transactionItemUnit    String?                               @default("EA") @db.VarChar(100)
  transactionCompanyCode String                                @db.VarChar(20)
  transactionCompanyName String                                @db.VarChar(100)
  transactionStatus      Transaction_transactionstatus_enum
  expectedAt             DateTime?                             @db.Timestamptz(6)
  confirmedAt            DateTime?                             @db.Timestamptz(6)
  supplyPrice            Int
  totalPrice             Int
  memo                   String?                               @db.VarChar(500)
  transactionDocumentNo  String?                               @db.VarChar(200)
  transactionIFStatus    Transaction_transactionifstatus_enum?
  managerId              Int?
  taxType                Transaction_taxtype_enum?
  tax                    Int?
  Administrator          Administrator?                        @relation(fields: [managerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e7b53f125767be3dd9eec1cc345")

  @@unique([transactionType, isGoodsReturn, transactionNo, transactionUnitNo, transactionItemCode], map: "unique_transaction")
  @@index([transactionNo], map: "IDX_666889c95bb48fc6d9ca232c2e")
}

model TreadCheck {
  id                  Int              @id(map: "PK_790a27f1a527ee8797022467136") @default(autoincrement())
  createdAt           DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt           DateTime         @default(now()) @db.Timestamptz(6)
  deletedAt           DateTime?        @db.Timestamptz(6)
  reportId            String           @db.VarChar(200)
  reportUploadAt      DateTime         @db.Timestamptz(6)
  reportSerialNo      String           @db.VarChar(50)
  reportDevice        String           @db.VarChar(50)
  reportDeviceVersion String           @db.VarChar(100)
  userName            String?          @db.VarChar(100)
  userAddress         String?          @db.VarChar(300)
  userEmail           String?          @db.VarChar(200)
  userTelPhone        String?          @db.VarChar(100)
  shopName            String?          @db.VarChar(100)
  shopAddress         String?          @db.VarChar(300)
  shopEmail           String?          @db.VarChar(200)
  shopTelPhone        String?          @db.VarChar(100)
  vehicleLicense      String?          @db.VarChar(100)
  vehicleVin          String?          @db.VarChar(100)
  vehicleMake         String?          @db.VarChar(100)
  vehicleModel        String?          @db.VarChar(100)
  vehicleYear         String?          @db.VarChar(100)
  vehicleMileage      Int?
  checkMode           Int
  unitType            Int
  tireStatus          String           @db.VarChar(1000)
  brakeDiscStatus     String           @db.VarChar(1000)
  brakeDistance       Int
  EachTreadCheck      EachTreadCheck[]
}

model Valet {
  id                 Int                        @id(map: "PK_c4cd04de38796c47b245785945d") @default(autoincrement())
  createdAt          DateTime                   @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                   @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?                  @db.Timestamptz(6)
  valetNo            String                     @db.VarChar(100)
  valetPrice         Int
  valetTax           Float?
  valetTaxType       Valet_valettaxtype_enum
  waitingPrice       Int?
  waitingTax         Float?
  waitingTaxType     Valet_waitingtaxtype_enum?
  valetMemo          String?                    @db.VarChar(500)
  mode               String?                    @db.VarChar
  returnStatus       String?                    @db.VarChar(100)
  returnMessage      String?                    @db.VarChar(100)
  pendedAt           DateTime?                  @db.Timestamptz(6)
  pickedUpAt         DateTime?                  @db.Timestamptz(6)
  regionDepth1       String?                    @db.VarChar(100)
  regionDepth2       String?                    @db.VarChar(100)
  regionDepth3       String?                    @db.VarChar(100)
  zipCode            String?                    @db.VarChar(5)
  country            String?                    @db.VarChar(2)
  detail             String?                    @db.VarChar(50)
  street             String?                    @db.VarChar(100)
  zibun              String?                    @db.VarChar(100)
  paymentCompletedAt DateTime?                  @db.Timestamptz(6)
  approvedAt         DateTime?                  @db.Timestamptz(6)
  canceledAt         DateTime?                  @db.Timestamptz(6)
  completedAt        DateTime?                  @db.Timestamptz(6)
  waitingReturnedAt  DateTime?                  @db.Timestamptz(6)
  isValetReturn      Boolean?
  ValetReview        ValetReview?
}

model ValetReview {
  id           Int         @id(map: "PK_ab9bf572d9cfaf89506392d0265") @default(autoincrement())
  createdAt    DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime    @default(now()) @db.Timestamptz(6)
  deletedAt    DateTime?   @db.Timestamptz(6)
  valetId      Int?        @unique(map: "REL_23a0defc7164811b3c6287c2cc")
  reviewItemId Int?        @unique(map: "REL_73327a1e6c76fb1111990a9a2a")
  customerId   Int?
  Valet        Valet?      @relation(fields: [valetId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_23a0defc7164811b3c6287c2cc7")
  Customer     Customer?   @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_380ee881c29064731fbdac00fed")
  ReviewItem   ReviewItem? @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_73327a1e6c76fb1111990a9a2aa")
}

model Vehicle {
  id              Int               @id(map: "PK_7124b1b9d8e76a0a3dcfc7ed98d") @default(autoincrement())
  createdAt       DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime          @default(now()) @db.Timestamptz(6)
  vehicleName     String            @db.VarChar(30)
  isBatchData     Boolean?
  vehicleRemark   String?           @db.VarChar(100)
  vehicleBrandId  Int
  OrderItemReview OrderItemReview[]
  VehicleBrand    VehicleBrand      @relation(fields: [vehicleBrandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_640f58280789df54cbf91fe1a7c")
  VehicleDetail   VehicleDetail[]

  @@unique([vehicleName, vehicleBrandId], map: "vehicle")
  @@index([vehicleName], map: "IDX_1a31bd2e4185230054f2a0fd15")
}

model VehicleBrand {
  id                 Int                         @id(map: "PK_5694edf293335849bb09d9e021f") @default(autoincrement())
  createdAt          DateTime                    @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                    @default(now()) @db.Timestamptz(6)
  koreanName         String                      @db.VarChar(100)
  englishName        String                      @db.VarChar(100)
  brandType          VehicleBrand_brandtype_enum
  sortNumber         Int                         @default(0)
  useable            Boolean                     @default(true)
  vehicleBrandRemark String?                     @db.VarChar(100)
  mediaId            Int?                        @unique(map: "REL_67706192aba69c1e99904843de")
  Vehicle            Vehicle[]
  Media              Media?                      @relation(fields: [mediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_67706192aba69c1e99904843de7")
}

model VehicleDetail {
  id                     Int                 @id(map: "PK_87cd58881ffe442e83c2661c05b") @default(autoincrement())
  createdAt              DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime            @default(now()) @db.Timestamptz(6)
  vehicleDetailCode      String?             @unique(map: "UQ_eb205faaf2a799ae49ae00997fe") @db.VarChar(100)
  subModel               String?             @db.VarChar(100)
  engineCode             String?             @db.VarChar(40)
  startYear              String?             @db.VarChar(10)
  endYear                String?             @db.VarChar(10)
  modelYear              String?             @db.VarChar(10)
  trim                   String?             @db.VarChar(50)
  model                  String?             @db.VarChar(100)
  vehicleType            String?             @db.VarChar(100)
  vehicleGrade           String?             @db.VarChar(100)
  drive                  String?             @db.VarChar(100)
  mission                String?             @db.VarChar(100)
  fuel                   String?             @db.VarChar(100)
  cc                     Int?
  vehicleBattery         String?             @db.VarChar(100)
  seatCount              Int?
  fuelRatio              Decimal?            @db.Decimal
  fuelTank               String?             @db.VarChar(50)
  vehicleUrl             String?             @db.VarChar(100)
  driverSeatWiperSize    String?             @db.VarChar(10)
  passengerSeatWiperSize String?             @db.VarChar(10)
  engineOilLiter         String?             @db.VarChar(10)
  displayVehicleModel    String?             @db.VarChar(150)
  displayBatteryModel    String?             @db.VarChar(150)
  vehicleId              Int?
  engineOilViscosity     String?             @db.VarChar(10)
  engineOilGrade         String?             @db.VarChar(20)
  CustomerVehicle        CustomerVehicle[]
  Vehicle                Vehicle?            @relation(fields: [vehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4c4e8e7a6d21c2fcd7149932928")
  VehicleDetailPart      VehicleDetailPart[]
  VehicleDetailTire      VehicleDetailTire[]
}

model VehicleDetailPart {
  id                          Int           @id(map: "PK_1ec44456e0819c493c0a8effd19") @default(autoincrement())
  createdAt                   DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt                   DateTime      @default(now()) @db.Timestamptz(6)
  deletedAt                   DateTime?     @db.Timestamptz(6)
  vehicleDetailPartKey        String?       @db.VarChar(100)
  vehicleDetailAmount         Int
  vehicleDetailPartRemark     String?       @db.VarChar(200)
  vehicleDetailId             Int
  catalogId                   Int
  defaultPart                 Boolean?
  vehicleDetailPartsSortLevel Int?
  VehicleDetail               VehicleDetail @relation(fields: [vehicleDetailId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_08473ad7efb697737865f0d4bf7")
  Catalog                     Catalog       @relation(fields: [catalogId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2c5e86f9e3d64e0956c7fb4dbc5")

  @@index([catalogId], map: "vehicledetailpart_catalogid_idx")
  @@index([vehicleDetailId], map: "vehicledetailpart_vehicledetailid_idx")
}

model VehicleDetailTire {
  id              Int            @id(map: "PK_5f3b4626b89ed8d3731f551c495") @default(autoincrement())
  createdAt       DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime       @default(now()) @db.Timestamptz(6)
  frontTire       String?        @db.VarChar
  rearTire        String?        @db.VarChar
  vehicleDetailId Int?
  VehicleDetail   VehicleDetail? @relation(fields: [vehicleDetailId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c16a145ff042911fd283e84357a")

  @@unique([frontTire, rearTire, vehicleDetailId], map: "UQ_b77f625dddb949fe59c8efe2bc1")
}

model VehicleLog {
  id         Int       @id(map: "PK_96ec39850e703e8791f3cffcfe4") @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime  @default(now()) @db.Timestamptz(6)
  optionKey  String?   @db.VarChar(100)
  isSuccess  Boolean?
  payload    Json?     @db.Json
  customerId Int?
  Customer   Customer? @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ff1ce42860385995ab53fd60683")
}

model VehicleWash {
  id                            Int                                    @id(map: "PK_3179c0477473beef26a1e53e156") @default(autoincrement())
  createdAt                     DateTime                               @default(now()) @db.Timestamptz(6)
  updatedAt                     DateTime                               @default(now()) @db.Timestamptz(6)
  deletedAt                     DateTime?                              @db.Timestamptz(6)
  orderItemNo                   String                                 @db.VarChar(100)
  classificationCode            String?                                @db.VarChar(100)
  vehicleWashUseMethod          VehicleWash_vehiclewashusemethod_enum?
  vehicleNumber                 String?                                @db.VarChar(100)
  vehicleWashStationAId         String?                                @db.VarChar
  vehicleWashEventId            String?                                @db.VarChar(50)
  vehicleWashProductNo          String?                                @db.VarChar(16)
  vehicleWashReceivedNo         String?                                @db.VarChar(20)
  vehicleWashNo                 String?                                @db.VarChar(20)
  issueCancelVehicleWashNo      String?                                @db.VarChar(20)
  vehicleWashAppliedPrice       Int?
  fromAvailabledDate            String?                                @db.VarChar
  toAvailabledDate              String?                                @db.VarChar
  vehicleWashUsingConfirmedDate String?                                @db.VarChar
  vehicleWashUsedShopNo         String?                                @db.VarChar
  alimTalkSended                Boolean?                               @default(false)
  finalAlimTalkSended           Boolean?                               @default(false)
  vehicleWashIssueRequestedAt   DateTime?                              @db.Timestamptz(6)
  vehicleWashIssueCanceledAt    DateTime?                              @db.Timestamptz(6)
  vehicleWashIssueCompletedAt   DateTime?                              @db.Timestamptz(6)
  vehicleWashExpiredAt          DateTime?                              @db.Timestamptz(6)
  vehicleWashUsedAt             DateTime?                              @db.Timestamptz(6)
  vehicleWashUsingConfirmedAt   DateTime?                              @db.Timestamptz(6)

  @@index([vehicleWashStationAId], map: "IDX_52c192195ccf9f289139c0cfa3")
  @@index([orderItemNo], map: "IDX_f6ddbf1bb1aacea76a2aa7a69a")
}

model VehicleWashPurchasePrice {
  id                       Int       @id(map: "PK_6d3a66fa7285e725ca5b12aad56") @default(autoincrement())
  createdAt                DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt                DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt                DateTime? @db.Timestamptz(6)
  erpCode                  String?   @db.VarChar(100)
  productName              String    @db.VarChar(500)
  vehicleWashPurchasePrice Float
  vehicleWashPurchaseTax   Float
  startedAt                DateTime? @db.Timestamptz(6)
  endedAt                  DateTime? @db.Timestamptz(6)
}

model VehicleWashStation {
  id                                                             Int                                               @id(map: "PK_0d2e9d696108ae3f647f1241068") @default(autoincrement())
  createdAt                                                      DateTime                                          @default(now()) @db.Timestamptz(6)
  updatedAt                                                      DateTime                                          @default(now()) @db.Timestamptz(6)
  deletedAt                                                      DateTime?                                         @db.Timestamptz(6)
  isOperating                                                    Boolean?                                          @default(true)
  isAutoApprove                                                  Boolean?                                          @default(false)
  vehicleWashStationCompany                                      VehicleWashStation_vehiclewashstationcompany_enum
  vehicleWashStationBrand                                        String?                                           @db.VarChar(200)
  vehicleWashUseMethod                                           VehicleWashStation_vehiclewashusemethod_enum?
  vehicleWashStationName                                         String                                            @db.VarChar(200)
  displayVehicleWashStationName                                  String?                                           @db.VarChar(200)
  regionDepth1                                                   String?                                           @db.VarChar
  regionDepth2                                                   String?                                           @db.VarChar
  regionDepth3                                                   String?                                           @db.VarChar
  zipCode                                                        String?                                           @db.VarChar
  country                                                        String?                                           @db.VarChar
  detail                                                         String?                                           @db.VarChar
  street                                                         String?                                           @db.VarChar
  zibun                                                          String?                                           @db.VarChar
  lat                                                            String?                                           @db.VarChar(30)
  lng                                                            String?                                           @db.VarChar(30)
  vehicleWashStationGeometry                                     Unsupported("geometry")?
  tel                                                            String?                                           @db.VarChar(20)
  managerName                                                    String?                                           @db.VarChar(200)
  managerPhone                                                   String?                                           @db.VarChar(200)
  vehicleWashStationAId                                          String?                                           @unique(map: "unique_vehicle_wash_station_aid") @db.VarChar
  winterSeasonStartBusinessTime                                  DateTime?                                         @db.Time(6)
  winterSeasonEndBusinessTime                                    DateTime?                                         @db.Time(6)
  summerSeasonStartBusinessTime                                  DateTime?                                         @db.Time(6)
  summerSeasonEndBusinessTime                                    DateTime?                                         @db.Time(6)
  markerMediaId                                                  Int?
  vehicleWashStationBrandMediaId                                 Int?
  accountId                                                      Int?                                              @unique(map: "REL_7bab170d74d8b4d6a7928b608c")
  vendorId                                                       Int?
  isAvailableEV                                                  Boolean?                                          @default(true)
  Media_VehicleWashStation_vehicleWashStationBrandMediaIdToMedia Media?                                            @relation("VehicleWashStation_vehicleWashStationBrandMediaIdToMedia", fields: [vehicleWashStationBrandMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_429060ae9a304d9ec57ebf831b4")
  Account                                                        Account?                                          @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7bab170d74d8b4d6a7928b608c3")
  Vendor                                                         Vendor?                                           @relation(fields: [vendorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7ddcb59d21c08e46588fc78cdf4")
  Media_VehicleWashStation_markerMediaIdToMedia                  Media?                                            @relation("VehicleWashStation_markerMediaIdToMedia", fields: [markerMediaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bb379b4b2b9abbfa83f891227b2")
  VehicleWashStationReview                                       VehicleWashStationReview[]
}

model VehicleWashStationReview {
  id                   Int                 @id(map: "PK_VehicleWashStationReview_id") @default(autoincrement())
  createdAt            DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime            @default(now()) @db.Timestamptz(6)
  deletedAt            DateTime?           @db.Timestamptz(6)
  vehicleWashStationId Int?
  reviewItemId         Int?                @unique(map: "REL_VehicleWashStationReview_reviewItemId")
  orderItemId          Int?                @unique(map: "REL_VehicleWashStationReview_orderItemId")
  customerId           Int?
  Customer             Customer?           @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VehicleWashStationReview_customerId")
  ReviewItem           ReviewItem?         @relation(fields: [reviewItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_VehicleWashStationReview_reviewItemId")
  VehicleWashStation   VehicleWashStation? @relation(fields: [vehicleWashStationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VehicleWashStationReview_vehicleWashStationId")

  @@index([vehicleWashStationId], map: "IDX_VehicleWashStation_vehicleWashStationId")
}

model Vendor {
  id                                       Int                  @id(map: "PK_4209c575b75de7de935cddda4e7") @default(autoincrement())
  createdAt                                DateTime             @default(now()) @db.Timestamptz(6)
  updatedAt                                DateTime             @default(now()) @db.Timestamptz(6)
  vendorCode                               String               @db.VarChar(20)
  vendorName                               String               @db.VarChar(100)
  vendorBusinessNumber                     String               @db.VarChar(20)
  vendorRepresentativeName                 String               @db.VarChar(20)
  vendorTel                                String?              @db.VarChar(20)
  vendorFax                                String?              @db.VarChar(20)
  vendorUseable                            Boolean              @default(true)
  catalogDefaultCost                       Int?
  vendorAId                                String?              @db.VarChar(200)
  managerPhone                             String?              @db.VarChar(200)
  subManagerPhoneList                      String[]             @db.VarChar
  accountId                                Int?                 @unique(map: "UQ_3b90f0daa8912d6221f1231c9a9")
  updatedAccountId                         Int?
  Catalog                                  Catalog[]
  CatalogVendor                            CatalogVendor[]
  GoodsIssueItem                           GoodsIssueItem[]
  GoodsReceipt                             GoodsReceipt[]
  Stock                                    Stock[]
  VehicleWashStation                       VehicleWashStation[]
  Account_Vendor_updatedAccountIdToAccount Account?             @relation("Vendor_updatedAccountIdToAccount", fields: [updatedAccountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3af58f6e4193d1407f964d76cf5")
  Account_Vendor_accountIdToAccount        Account?             @relation("Vendor_accountIdToAccount", fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3b90f0daa8912d6221f1231c9a9")

  @@index([vendorAId], map: "IDX_0c8fbad5f6c652e700be966d8c")
}

model Warehouse {
  id             Int                          @id(map: "PK_c4485aa90c562f2737068d271ef") @default(autoincrement())
  createdAt      DateTime                     @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime                     @default(now()) @db.Timestamptz(6)
  warehouseName  String                       @db.VarChar(100)
  warehouseType  Warehouse_warehousetype_enum
  regionDepth1   String?                      @db.VarChar(100)
  regionDepth2   String?                      @db.VarChar(100)
  regionDepth3   String?                      @db.VarChar(50)
  zipCode        String?                      @db.VarChar(20)
  country        String?                      @db.VarChar(10)
  detail         String?                      @db.VarChar(50)
  street         String?                      @db.VarChar(50)
  zibun          String?                      @db.VarChar(50)
  GoodsIssueItem GoodsIssueItem[]
  GoodsReceipt   GoodsReceipt[]
  Stock          Stock[]
}

model WithdrawalCustomer {
  id                 Int                              @id(map: "PK_cbe980fd0948447eddf9afab81a") @default(autoincrement())
  createdAt          DateTime                         @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime                         @default(now()) @db.Timestamptz(6)
  deletedAt          DateTime?                        @db.Timestamptz(6)
  customerName       String                           @db.VarChar(50)
  customerEmail      String                           @db.VarChar(200)
  customerPhone      String                           @db.VarChar(12)
  birth              String?                          @db.VarChar
  gender             WithdrawalCustomer_gender_enum?
  ci                 String?                          @db.VarChar(100)
  di                 String?                          @db.VarChar(100)
  recommendationCode String                           @db.VarChar(6)
  recommenderCode    String?                          @db.VarChar(50)
  dormantAt          DateTime?                        @db.Timestamptz(6)
  customerRemark     String?                          @db.VarChar(100)
  service            WithdrawalCustomer_service_enum?
  customerId         Int?                             @unique(map: "REL_5d26eb3cf0ee9ca16fb73d98a7")
  Customer           Customer?                        @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5d26eb3cf0ee9ca16fb73d98a7e")

  @@index([createdAt], map: "IDX_4307213d9265f1259ca8aef589")
  @@index([customerName], map: "IDX_b34ed2dda4984c2f41642f7f01")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model typeorm_metadata {
  type     String  @db.VarChar
  database String? @db.VarChar
  schema   String? @db.VarChar
  table    String? @db.VarChar
  name     String? @db.VarChar
  value    String?

  @@ignore
}

model HappyCallStateLog {
  id              Int            @id(map: "PK_HappyCallStateLog_id") @default(autoincrement())
  createdAt       DateTime       @default(now()) @db.Timestamptz(6)
  orderNo         String         @db.VarChar(100)
  administratorId Int?
  happyCallState  String         @db.VarChar(20)
  happyCallMemo   String?        @db.VarChar(500)
  Administrator   Administrator? @relation(fields: [administratorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_HappyCallStateLog_administratorId")
}

model ReviewUp {
  id           Int       @id(map: "PK_ReviewUp_id") @default(autoincrement())
  createdAt    DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt    DateTime? @db.Timestamptz(6)
  reviewUp     Boolean   @default(false)
  reviewItemId Int
  customerId   Int
  addUpCnt     Int       @default(0)
  Customer     Customer  @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReviewUp_customerId")

  @@unique([reviewItemId, customerId], map: "UQ_ReviewUp_reviewItemId_customerId")
}

enum Administrator_administratorstatus_enum {
  activation
  dormancy
}

enum AppVersion_type_enum {
  android
  ios
}

enum AuthToken_type_enum {
  email
  message
}

enum BatchLock_batchlockstatus_enum {
  LOCK
  UNLOCK
}

enum BatteryRush_rushstatus_enum {
  BEFORE_APPLICATION
  COMPLETED_APPLICATION
  COMPLETED_DISPATCH
  CANCELLATION_SELF_ORDER
  CANCELLATION_BEFORE_DISPATCH
  CANCELLATION_AFTER_DISPATCH
}

enum BatteryRush_rushtaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum BatteryRush_rushtype_enum {
  NORMAL_RUSH
  NOW_RUSH
}

enum CardBenefit_type_enum {
  INTEREST_FREE
  DISCOUNT
}

enum CatalogBrand_brandtype_enum {
  DOMESTIC
  IMPORT
}

enum CatalogPriceHistory_taxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum CatalogVendor_stocktype_enum {
  NORMAL
  CONSIGNMENT
}

enum Catalog_catalogtype_enum {
  TANGIBLE
  INTANGIBLE
}

enum CouponTemplate_availabletype_enum {
  DATE
  PERIOD
}

enum CouponTemplate_coupondiscountmethod_enum {
  DISCOUNT_PRICE
  DISCOUNT_RATE
  FIXED_PRICE
}

enum CouponTemplate_couponminpricetype_enum {
  ORDER_FORM
  PRODUCT_SERVICE
  PRODUCT
}

enum CouponTemplate_coupontargetservices_enum {
  WHEEL_ALIGNMENT
  VALET
  REPAIR
  BATTERY_NOW
  BATTERY_RUSH
  DELIVERY
}

enum CouponTemplate_coupontype_enum {
  ORDER_FORM
  PRODUCT_SERVICE
  DELIVERY
  PRODUCT
  SERVICE
}

enum CouponTemplate_paymentmethods_enum {
  VIRTUAL_ACCOUNT
  CARD
  TRANS
  VBANK
  PHONE
  TOSS_PAY
  KAKAO_PAY
  NAVER_PAY
  PAYCO
  CHAI
  L_PAY
  SSG_PAY
  POINT
}

enum Coupon_coupontype_enum {
  ORDER_FORM
  PRODUCT_SERVICE
  DELIVERY
  PRODUCT
  SERVICE
}

enum CustomerMarketingLog_marketingreceivabletype_enum {
  EMAIL
  PUSH
  SMS
}

enum CustomerVehicleMileageHistory_mileageinspectiontype_enum {
  DIRECT_WRITING     @map("직접 입력")
  VEHICLE_INSPECTION @map("자동차 검사")
}

enum CustomerVehicle_customervehicleownertype_enum {
  INDIVIDUAL  @map("개인")
  CORPORATION @map("법인")
  RENTAL_CAR  @map("렌터카")
}

enum CustomerVehicle_trucktype_enum {
  HIGH_TOP @map("하이탑")
  LOW_TOP  @map("로우탑")
  NOTHING  @map("없음")
}

enum Customer_gender_enum {
  MALE
  FEMALE
}

enum Customer_joinchannel_enum {
  PC_WEB
  MOBILE_WEB
  IOS
  ANDROID
}

enum DataList_datatype_enum {
  DOWNLOAD
  UPLOAD
}

enum DeliveryHistory_deliveryhistorystatus_enum {
  READY
  COLLECTION
  TRACKING
  ARRIVE_POINT
  DELIVERY
  COMPLETE
}

enum DeliveryTemplateMethod_deliverymethod_enum {
  DIRECT_PICK_UP
  DELIVERY_SERVICE
  FREIGHT
  REGISTERED
  QUICK_PACKAGE
  PACKAGE
  MAIL
  AIRPLANE
  SHIP
  BICYCLE
  ETC
}

enum DeliveryTemplateMethod_deliverymethodtype_enum {
  DELIVERY
  EXCHANGE
  RETURN
}

enum DeliveryTemplateMethod_deliverytaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum DeliveryTemplateMethod_deliveryvendors_enum {
  KOREA_POST
  CJ
  LOTTE
  HANJIN
  LOGEN
  KYOUNGDONG
  GLOVIS
  LXPANTOS
  DAESIN
  ACIEXPRESS
  GORYEO
  TALAS
  CHUNIL
  YONGMALOGIS
  SUNGHWA
  K_HONAM
  SLX
  KUNYOUNG
  ETC
}

enum DeliveryTemplateMethod_isolationdeliverytaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum DeliveryTemplateMethod_location_enum {
  SEOUL
  GYEONGGI
  INCHEON
  GANGWON
  SEJONG
  CHUNGHEONG
  DAEJEON
  GYEONSANG
  DAEGU
  ULSAN
  BUSAN
  JEOLLA
  GWANGJU
  JEJU
  ALL
}

enum DeliveryTemplateMethod_paymenttype_enum {
  CASH_ON_DELIVERY
  PREPAYMENT
  SELECT
}

enum Delivery_deliverytaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Delivery_deliverytype_enum {
  DELIVERY
  RETURN
}

enum DispatchLog_sendingtype_enum {
  EMAIL
  MESSAGE
  PUSH
}

enum DispatchTemplate_dispatchtemplatesendingtype_enum {
  EMAIL
  MESSAGE
  PUSH
}

enum DispatchTemplate_dispatchtemplatetype_enum {
  BUILT_IN
  CUSTOM
}

enum DormantCustomer_gender_enum {
  MALE
  FEMALE
}

enum EventApply_applychannel_enum {
  PC_WEB
  MOBILE_WEB
  IOS
  ANDROID
}

enum FaqCategory_service_enum {
  BOS_WEB
  CUSTOMER_APP
  REPAIR_SHOP_WEB
  WASH_WEB
  VENDOR_WEB
}

enum GoodsReceipt_goodsreceiptstatus_enum {
  WAITING
  COMPLETE
}

enum GoodsReceipt_goodsreceipttype_enum {
  NORMAL
  RETURN
}

enum InquiryCategory_service_enum {
  BOS_WEB
  CUSTOMER_APP
  REPAIR_SHOP_WEB
  WASH_WEB
  VENDOR_WEB
}

enum Inquiry_service_enum {
  BOS_WEB
  CUSTOMER_APP
  REPAIR_SHOP_WEB
  WASH_WEB
  VENDOR_WEB
}

enum Inquiry_status_enum {
  pending
  received
  replied
}

enum Media_type_enum {
  small_image @map("small-image")
  big_image   @map("big-image")
  small_file  @map("small-file")
  big_file    @map("big-file")
  video
}

enum OfflineCouponTemplate_availabletype_enum {
  DATE
  PERIOD
}

enum OfflineCouponTemplate_coupondiscountmethod_enum {
  DISCOUNT_PRICE
  DISCOUNT_RATE
  FIXED_PRICE
}

enum OfflineCouponTemplate_coupontype_enum {
  LOCAL
  ALLIANCE
}

enum OrderItemProductOption_taxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum OrderItem_orderitemtaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Order_clienttype_enum {
  APP
  PC_WEB
  MOBILE_WEB
}

enum Order_orderstatus_enum {
  PENDING
  READIED_PAYMENT
  COMPLETED_PAYMENT
  COMPLETED_PURCHASE
  CANCELED_ORDER
}

enum Payment_paymentchannel_enum {
  IAMPORT
  TOSS
}

enum Payment_paymentmethod_enum {
  VIRTUAL_ACCOUNT
  CARD
  TRANS
  VBANK
  PHONE
  TOSS_PAY
  KAKAO_PAY
  NAVER_PAY
  PAYCO
  CHAI
  L_PAY
  SSG_PAY
  POINT
}

enum Payment_paymentstatus_enum {
  PENDING
  IN_PROGRESS
  WAITING_FOR_DEPOSIT
  DONE
  CANCELED
  PARTIAL_CANCELED
  ABORTED
  EXPIRED
}

enum Payment_paymenttype_enum {
  NORMAL
  REFUND
}

enum ProductBrand_producttype_enum {
  TIRE
  BATTERY
  ENGINE_OIL
  VEHICLE_WASH
  ETC
}

enum ProductOption_productoptiontaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum ProductPriceBulk_taxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Product_paymentmethods_enum {
  VIRTUAL_ACCOUNT
  CARD
  TRANS
  VBANK
  PHONE
  TOSS_PAY
  KAKAO_PAY
  NAVER_PAY
  PAYCO
  CHAI
  L_PAY
  SSG_PAY
  POINT
}

enum Product_productbadge_enum {
  BEST
  HOT
  NEW
  // 이월상품 @map("이월상품")
}

enum Product_productoptiontype_enum {
  ONE
  MULTIPLE_SINGLE
  MULTIPLE_COMBINATION
}

enum Product_taxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Promotion_displaytype_enum {
  BANNER  @map("배너형")
  PRODUCT @map("상품형")
}

enum Promotion_promotionstatus_enum {
  OPERATION @map("운영")
  END       @map("종료")
}

enum RepairItem_purchasetaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum RepairItem_repairtaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum RepairShopBreakTime_breakdaytypes_enum {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  HOLIDAY
}

enum RepairShopBreakTime_breaktimetypes_enum {
  EVERYDAY
  WEEKDAY_WEEKEND @map("WEEKDAY WEEKEND")
  DAY
}

enum RepairShopBusiness_businessdaytypes_enum {
  EVERYDAY
  WEEKDAY_WEEKEND @map("WEEKDAY WEEKEND")
  DAY
}

enum RepairShopBusiness_repairshopholidayworkdays_enum {
  NEW_YEAR_DAY            @map("신정")
  LUNAR_NEW_YEAR          @map("설날연휴")
  MARCH_ONE               @map("삼일절")
  CHILDREN_DAY            @map("어린이날")
  BUDDHA_BIRTHDAY         @map("석가탄신일")
  MEMORIAL_DAY            @map("현충일")
  NATIONAL_LIBERATION_DAY @map("광복절")
  CHUSEOK                 @map("추석연휴")
  GAECHEONJEOL            @map("개천절")
  HANGUL_DAY              @map("한글날")
  CHRIST_MAS              @map("성탄절")
}

enum RepairShopBusiness_reservationinterval_enum {
  THIRTY             @map("30")
  SIXTY              @map("60")
  ONE_HUNDRED_TWENTY @map("120")
  ONE_HUNDRED_EIGHTY @map("180")
}

enum RepairShopDayOff_dayoffday_enum {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  HOLIDAY
}

enum RepairShopDayOff_dayoffweek_enum {
  ONE        @map("1")
  TWO        @map("2")
  THREE      @map("3")
  FOUR       @map("4")
  FIVE       @map("5")
  EVERY_WEEK
}

enum RepairShopMedia_type_enum {
  ALL    @map("전체")
  FRONT  @map("정면")
  INSIDE @map("내부")
}

enum RepairShopReview_repairshoplabel_enum {
  NEW
}

enum RepairShopTemporaryBusiness_temporarybusinesstype_enum {
  CHANGED
  CLOSED
}

enum RepairShop_repairshopfranchisetype_enum {
  GS  @map("GS엠비즈")
  SM  @map("스피드메이트")
  ETC @map("기타")
}

enum RepairShop_repairshoplabel_enum {
  NEW
}

enum RepairShop_repairshopstatustype_enum {
  OPERATION         @map("운영")
  NON_OPERATION     @map("미운영")
  OPERATION_WAITING @map("운영대기")
  APPLICATION       @map("제휴 신청")
  APPROVAL          @map("제휴 승인")
  RETURN            @map("제휴 반려")
  CANCEL            @map("신청 취소")
  END               @map("제휴 종료")
}

enum RepairShop_repairshoptype_enum {
  INDEPENDENCY   @map("독립")
  SIDE_ESTABLISH @map("병설")
  OUT_SIDE       @map("외부")
  DISCOUNT_STORE @map("할인점")
}

enum Repair_repairshoplabel_enum {
  NEW
}

enum ReviewLabel_reviewlabeltype_enum {
  TIRE
  VALET
  ENGINE_OIL
  REPAIR_SHOP
  BATTERY_NOW
  BATTERY_NORMAL
  VEHICLE_WASH
}

enum Reward_channel_enum {
  SK_TOKTOK
}

enum Reward_method_enum {
  VEHICLE_WASH
  COUPON
}

enum ServicePrice_servicetaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum ServicePrice_servicetype_enum {
  REPAIR
  RUSH
  DELIVERY
  INTANGIBLE_PRODUCT
  ETC
}

enum ShoppingBasket_shoppingbaskettype_enum {
  REPAIR
  VALET
  DELIVERY
  RUSH_NORMAL
  RUSH_NOW
}

enum SpecTemplate_spectype_enum {
  CATALOG
  CATALOG_GROUP
  PRODUCT
}

enum Stock_stockstatus_enum {
  WAITING
  ACTIVE
  ORDER_PICKING
  DELIVERY
  SOLD_OUT
  RETURN
  NOT_AVAILABLE
}

enum ThirdPartyLogging_resultstatus_enum {
  SUCCESS
  FAIL
}

enum TireSize_tiretype_enum {
  SEDAN_SUV
  LT_VAN
}

enum Transaction_taxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Transaction_transactionifstatus_enum {
  SUCCESS
  FAIL
}

enum Transaction_transactionstatus_enum {
  EXPECTATION
  CONFIRMATION
}

enum Transaction_transactiontype_enum {
  SALES
  PURCHASE
}

enum Valet_valettaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum Valet_waitingtaxtype_enum {
  TAX
  TAX_ZERO
  TAX_FREE
}

enum VehicleBrand_brandtype_enum {
  DOMESTIC @map("국산")
  INCOME   @map("수입")
}

enum VehicleWashStation_vehiclewashstationcompany_enum {
  HYUNDAI_OIL_BANK @map("HD현대오일뱅크")
  GS_CALTEX        @map("GS칼텍스")
  KK               @map("경북광유")
  SK_GAS           @map("SK가스")
}

enum VehicleWashStation_vehiclewashusemethod_enum {
  QR
  BARCODE
}

enum VehicleWash_vehiclewashusemethod_enum {
  QR
  BARCODE
}

enum Warehouse_warehousetype_enum {
  VIRTUAL
  NORMAL
  OWN
}

enum WithdrawalCustomer_gender_enum {
  MALE
  FEMALE
}

enum WithdrawalCustomer_service_enum {
  BOS_WEB
  CUSTOMER_APP
  REPAIR_SHOP_WEB
  WASH_WEB
  VENDOR_WEB
}

enum CouponTemplate_couponbenefitdisplaytypes_enum {
  NONE
  CALCULATE_PRICE
  TEXT
}
